<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="110.9540" tests="1914" failures="1" skipped="230">
  <testsuite name="Root Suite" timestamp="2022-06-30T06:42:24" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="POST /instance/:instanceId/cli/:uuid/send-cluster-command" timestamp="2022-06-30T06:42:24" tests="0" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_cluster_command.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:24" tests="19" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_cluster_command.test.ts" time="0.0020" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:24" tests="3" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_cluster_command.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="Single Node" timestamp="2022-06-30T06:42:24" tests="0" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_cluster_command.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="String" timestamp="2022-06-30T06:42:24" tests="3" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_cluster_command.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="Raw output" timestamp="2022-06-30T06:42:24" tests="4" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_cluster_command.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Client" timestamp="2022-06-30T06:42:24" tests="1" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_cluster_command.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="POST /instance/:instanceId/cli/:uuid/send-command" timestamp="2022-06-30T06:42:24" tests="0" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:24" tests="12" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.2930" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: command = &quot;undefined&quot;" time="0.0580" classname="Validation error when data: command = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: command = &quot;null&quot;" time="0.0070" classname="Validation error when data: command = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: command = &quot;100&quot;" time="0.0070" classname="Validation error when data: command = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: command = &quot;100.12&quot;" time="0.0060" classname="Validation error when data: command = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: command = &quot;true&quot;" time="0.0100" classname="Validation error when data: command = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: command = &quot;[object Object]&quot;" time="0.0070" classname="Validation error when data: command = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: command = &quot;some,array&quot;" time="0.0080" classname="Validation error when data: command = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: outputFormat = &quot;100&quot;" time="0.0080" classname="Validation error when data: outputFormat = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: outputFormat = &quot;100.12&quot;" time="0.0070" classname="Validation error when data: outputFormat = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: outputFormat = &quot;true&quot;" time="0.0100" classname="Validation error when data: outputFormat = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: outputFormat = &quot;[object Object]&quot;" time="0.0090" classname="Validation error when data: outputFormat = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Validation Validation error when data: outputFormat = &quot;some,array&quot;" time="0.0060" classname="Validation error when data: outputFormat = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:25" tests="0" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="String" timestamp="2022-06-30T06:42:25" tests="3" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0530" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common String Should create string" time="0.0100" classname="Should create string">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common String Should get string" time="0.0060" classname="Should get string">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common String Should remove string" time="0.0100" classname="Should remove string">
    </testcase>
  </testsuite>
  <testsuite name="List" timestamp="2022-06-30T06:42:25" tests="3" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0450" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common List Should create list" time="0.0060" classname="Should create list">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common List Should get list" time="0.0050" classname="Should get list">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common List Should remove list" time="0.0070" classname="Should remove list">
    </testcase>
  </testsuite>
  <testsuite name="Set" timestamp="2022-06-30T06:42:25" tests="3" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0430" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Set Should create set" time="0.0070" classname="Should create set">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Set Should get set" time="0.0050" classname="Should get set">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Set Should remove list" time="0.0070" classname="Should remove list">
    </testcase>
  </testsuite>
  <testsuite name="ZSet" timestamp="2022-06-30T06:42:25" tests="3" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0430" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common ZSet Should create zset" time="0.0060" classname="Should create zset">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common ZSet Should get zset" time="0.0050" classname="Should get zset">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common ZSet Should remove zset" time="0.0050" classname="Should remove zset">
    </testcase>
  </testsuite>
  <testsuite name="Hash" timestamp="2022-06-30T06:42:25" tests="3" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0480" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Hash Should create hash" time="0.0080" classname="Should create hash">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Hash Should get hash" time="0.0090" classname="Should get hash">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Hash Should remove hash" time="0.0040" classname="Should remove hash">
    </testcase>
  </testsuite>
  <testsuite name="ReJSON-RL" timestamp="2022-06-30T06:42:25" tests="3" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0510" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common ReJSON-RL Should create json" time="0.0070" classname="Should create json">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common ReJSON-RL Should get json" time="0.0060" classname="Should get json">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common ReJSON-RL Should remove json" time="0.0070" classname="Should remove json">
    </testcase>
  </testsuite>
  <testsuite name="TSDB-TYPE" timestamp="2022-06-30T06:42:25" tests="4" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0510" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common TSDB-TYPE Should create ts" time="0.0070" classname="Should create ts">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common TSDB-TYPE Should add to ts" time="0.0050" classname="Should add to ts">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common TSDB-TYPE Should get ts" time="0.0040" classname="Should get ts">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common TSDB-TYPE Should remove ts" time="0.0050" classname="Should remove ts">
    </testcase>
  </testsuite>
  <testsuite name="Graph" timestamp="2022-06-30T06:42:25" tests="3" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0590" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Graph Should create graph" time="0.0080" classname="Should create graph">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Graph Should get graph" time="0.0060" classname="Should get graph">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Graph Should remove graph" time="0.0060" classname="Should remove graph">
    </testcase>
  </testsuite>
  <testsuite name="RediSearch v2" timestamp="2022-06-30T06:42:25" tests="0" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Hash" timestamp="2022-06-30T06:42:25" tests="6" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0850" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 Hash Should create index" time="0.0050" classname="Should create index">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 Hash Should return the list of all existing indexes." time="0.0040" classname="Should return the list of all existing indexes.">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 Hash Should return index info" time="0.0080" classname="Should return index info">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 Hash Should find documents" time="0.0090" classname="Should find documents">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 Hash Should aggregate documents by uniq @title" time="0.0060" classname="Should aggregate documents by uniq @title">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 Hash Should remove index" time="0.0090" classname="Should remove index">
    </testcase>
  </testsuite>
  <testsuite name="JSON" timestamp="2022-06-30T06:42:25" tests="5" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0790" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 JSON Should create index" time="0.0060" classname="Should create index">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 JSON Should return index info" time="0.0110" classname="Should return index info">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 JSON Should find documents" time="0.0100" classname="Should find documents">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 JSON Should aggregate documents by uniq @name" time="0.0040" classname="Should aggregate documents by uniq @name">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common RediSearch v2 JSON Should remove index" time="0.0040" classname="Should remove index">
    </testcase>
  </testsuite>
  <testsuite name="RediSearch v1" timestamp="2022-06-30T06:42:25" tests="0" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Hash" timestamp="2022-06-30T06:42:25" tests="4" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="Stream" timestamp="2022-06-30T06:42:25" tests="3" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0410" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Stream Should create stream" time="0.0050" classname="Should create stream">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Stream Should get stream" time="0.0090" classname="Should get stream">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Stream Should remove stream" time="0.0050" classname="Should remove stream">
    </testcase>
  </testsuite>
  <testsuite name="Bad commands" timestamp="2022-06-30T06:42:25" tests="7" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0860" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Bad commands Should return error if invalid command sent" time="0.0060" classname="Should return error if invalid command sent">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Bad commands Should return error if try to run unsupported command (monitor)" time="0.0040" classname="Should return error if try to run unsupported command (monitor)">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Bad commands Should return error if try to run unsupported command (subscribe)" time="0.0040" classname="Should return error if try to run unsupported command (subscribe)">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Bad commands Should return error if try to run unsupported command (psubscribe)" time="0.0050" classname="Should return error if try to run unsupported command (psubscribe)">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Bad commands Should return error if try to run unsupported command (sync)" time="0.0050" classname="Should return error if try to run unsupported command (sync)">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Bad commands Should return error if try to run unsupported command (psync)" time="0.0040" classname="Should return error if try to run unsupported command (psync)">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Bad commands Should return error if try to run unsupported command (script debug)" time="0.0040" classname="Should return error if try to run unsupported command (script debug)">
    </testcase>
  </testsuite>
  <testsuite name="Blocking commands" timestamp="2022-06-30T06:42:25" tests="4" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="11.0940" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Blocking commands Should use blocking command (unblock by cli command)" time="5.0080" classname="Should use blocking command (unblock by cli command)">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Blocking commands Should use blocking command (unblock by adding element)" time="5.0080" classname="Should use blocking command (unblock by adding element)">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Blocking commands Should use blocking command (unblock by removing client through API)" time="1.0060" classname="Should use blocking command (unblock by removing client through API)">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Blocking commands Should remove list" time="0.0110" classname="Should remove list">
    </testcase>
  </testsuite>
  <testsuite name="Human readable commands" timestamp="2022-06-30T06:42:36" tests="1" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0130" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Common Human readable commands Should return server info in correct text format" time="0.0040" classname="Should return server info in correct text format">
    </testcase>
  </testsuite>
  <testsuite name="Raw output" timestamp="2022-06-30T06:42:36" tests="4" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0550" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Raw output Should return a string type response" time="0.0050" classname="Should return a string type response">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Raw output Should return a number type response" time="0.0060" classname="Should return a number type response">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Raw output Should return an array type response" time="0.0090" classname="Should return an array type response">
    </testcase>
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Raw output Should return an object type response" time="0.0060" classname="Should return an object type response">
    </testcase>
  </testsuite>
  <testsuite name="Client" timestamp="2022-06-30T06:42:37" tests="1" file="/usr/src/app/test/api/cli/POST-instance-id-cli-uuid-send_command.test.ts" time="0.0240" failures="0">
    <testcase name="POST /instance/:instanceId/cli/:uuid/send-command Client Should throw ClientNotFoundError" time="0.0150" classname="Should throw ClientNotFoundError">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/cli" timestamp="2022-06-30T06:42:37" tests="0" file="/usr/src/app/test/api/cli/POST-instance-id-cli.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:37" tests="1" file="/usr/src/app/test/api/cli/POST-instance-id-cli.test.ts" time="0.0090" failures="0">
    <testcase name="POST /instance/:instanceId/cli Common Should create new cli client" time="0.0080" classname="Should create new cli client">
    </testcase>
  </testsuite>
  <testsuite name="POST /redis-enterprise/cloud/get-account" timestamp="2022-06-30T06:42:37" tests="0" file="/usr/src/app/test/api/cloud/POST-redis_enterprise-cloud-get_account.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:37" tests="14" file="/usr/src/app/test/api/cloud/POST-redis_enterprise-cloud-get_account.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:37" tests="3" file="/usr/src/app/test/api/cloud/POST-redis_enterprise-cloud-get_account.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="POST /redis-enterprise/cloud/get-databases" timestamp="2022-06-30T06:42:37" tests="0" file="/usr/src/app/test/api/cloud/POST-redis_enterprise-cloud-get_databases.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:37" tests="19" file="/usr/src/app/test/api/cloud/POST-redis_enterprise-cloud-get_databases.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:37" tests="4" file="/usr/src/app/test/api/cloud/POST-redis_enterprise-cloud-get_databases.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="POST /redis-enterprise/cloud/get-subscriptions" timestamp="2022-06-30T06:42:37" tests="0" file="/usr/src/app/test/api/cloud/POST-redis_enterprise-cloud-get_subscriptions.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:37" tests="14" file="/usr/src/app/test/api/cloud/POST-redis_enterprise-cloud-get_subscriptions.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:37" tests="3" file="/usr/src/app/test/api/cloud/POST-redis_enterprise-cloud-get_subscriptions.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="GET /commands" timestamp="2022-06-30T06:42:37" tests="1" file="/usr/src/app/test/api/commands/GET-commands.test.ts" time="0.0180" failures="0">
    <testcase name="GET /commands Should return merged config" time="0.0170" classname="Should return merged config">
    </testcase>
  </testsuite>
  <testsuite name="POST /redis-enterprise/cluster/get-dbs" timestamp="2022-06-30T06:42:37" tests="2" file="/usr/src/app/test/api/enterprise/POST-redis-enterprise-cluster-get_dbs.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="DELETE /instance/:instanceId/hash/fields" timestamp="2022-06-30T06:42:37" tests="0" file="/usr/src/app/test/api/hash/DELETE-instance-id-hash-fields.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:37" tests="13" file="/usr/src/app/test/api/hash/DELETE-instance-id-hash-fields.test.ts" time="0.0580" failures="0">
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: keyName = &quot;null&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: fields = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: fields = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: fields = &quot;null&quot;" time="0.0050" classname="Validation error when data: fields = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: fields = &quot;somestring&quot;" time="0.0040" classname="Validation error when data: fields = &quot;somestring&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: fields = &quot;100&quot;" time="0.0040" classname="Validation error when data: fields = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: fields = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: fields = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Validation Validation error when data: fields = &quot;true&quot;" time="0.0040" classname="Validation error when data: fields = &quot;true&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:37" tests="7" file="/usr/src/app/test/api/hash/DELETE-instance-id-hash-fields.test.ts" time="0.1380" failures="0">
    <testcase name="DELETE /instance/:instanceId/hash/fields Common Should ignore not existing field" time="0.0480" classname="Should ignore not existing field">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Common Should remove 1 field" time="0.0370" classname="Should remove 1 field">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Common Should remove multiple fields" time="0.0320" classname="Should remove multiple fields">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Common Should remove all fields and the key" time="0.0100" classname="Should remove all fields and the key">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Common Should return BadRequest error if try to modify incorrect data type" time="0.0030" classname="Should return BadRequest error if try to modify incorrect data type">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:42:37" tests="3" file="/usr/src/app/test/api/hash/DELETE-instance-id-hash-fields.test.ts" time="0.0180" failures="0">
    <testcase name="DELETE /instance/:instanceId/hash/fields ACL Should not delete member" time="0.0080" classname="Should not delete member">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields ACL Should throw error if no permissions for &quot;hdel&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;hdel&quot; command">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/hash/fields ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/hash/get-fields" timestamp="2022-06-30T06:42:37" tests="0" file="/usr/src/app/test/api/hash/POST-instance-id-hash-get_fields.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:37" tests="24" file="/usr/src/app/test/api/hash/POST-instance-id-hash-get_fields.test.ts" time="0.1380" failures="0">
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: keyName = &quot;null&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: keyName = &quot;100&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: keyName = &quot;true&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0080" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: cursor = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: cursor = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: cursor = &quot;null&quot;" time="0.0070" classname="Validation error when data: cursor = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: cursor = &quot;stringvalue&quot;" time="0.0080" classname="Validation error when data: cursor = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: cursor = &quot;[object Object]&quot;" time="0.0070" classname="Validation error when data: cursor = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: cursor = &quot;some,array&quot;" time="0.0060" classname="Validation error when data: cursor = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: cursor = &quot;11.11&quot;" time="0.0080" classname="Validation error when data: cursor = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: cursor = &quot;-1&quot;" time="0.0030" classname="Validation error when data: cursor = &quot;-1&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: count = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: count = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: count = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: count = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: count = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: count = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: count = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: count = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: count = &quot;0&quot;" time="0.0030" classname="Validation error when data: count = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: match = &quot;100&quot;" time="0.0050" classname="Validation error when data: match = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: match = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: match = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: match = &quot;true&quot;" time="0.0040" classname="Validation error when data: match = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: match = &quot;[object Object]&quot;" time="0.0050" classname="Validation error when data: match = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Validation Validation error when data: match = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: match = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:37" tests="8" file="/usr/src/app/test/api/hash/POST-instance-id-hash-get_fields.test.ts" time="0.0000" failures="0">
    <testcase name="POST /instance/:instanceId/hash/get-fields Common Should find by exact match" time="0.0050" classname="Should find by exact match">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Common Should not find any field" time="0.0380" classname="Should not find any field">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Common Should query 15 fields" time="0.0080" classname="Should query 15 fields">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Common Should query by * in the end" time="0.0380" classname="Should query by * in the end">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Common Should query by * in the beginning" time="0.0390" classname="Should query by * in the beginning">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Common Should query by * in the middle" time="0.0270" classname="Should query by * in the middle">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="Search in huge number of fields" timestamp="2022-06-30T06:42:37" tests="1" file="/usr/src/app/test/api/hash/POST-instance-id-hash-get_fields.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:42:37" tests="4" file="/usr/src/app/test/api/hash/POST-instance-id-hash-get_fields.test.ts" time="0.0210" failures="0">
    <testcase name="POST /instance/:instanceId/hash/get-fields ACL Should not delete member" time="0.0040" classname="Should not delete member">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields ACL Should throw error if no permissions for &quot;hlen&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;hlen&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields ACL Should throw error if no permissions for &quot;hget&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;hget&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash/get-fields ACL Should throw error if no permissions for &quot;hscan&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;hscan&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/hash" timestamp="2022-06-30T06:42:37" tests="0" file="/usr/src/app/test/api/hash/POST-instance-id-hash.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:37" tests="37" file="/usr/src/app/test/api/hash/POST-instance-id-hash.test.ts" time="0.1580" failures="0">
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: fields = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields = &quot;null&quot;" time="0.0040" classname="Validation error when data: fields = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: fields = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields = &quot;100&quot;" time="0.0030" classname="Validation error when data: fields = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: fields = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields = &quot;true&quot;" time="0.0030" classname="Validation error when data: fields = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0 = &quot;null&quot;" time="0.0030" classname="Validation error when data: fields.0 = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0 = &quot;somestring&quot;" time="0.0050" classname="Validation error when data: fields.0 = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0 = &quot;100&quot;" time="0.0030" classname="Validation error when data: fields.0 = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0 = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: fields.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0 = &quot;true&quot;" time="0.0030" classname="Validation error when data: fields.0 = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;null&quot;" time="0.0040" classname="Validation error when data: fields.0.field = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;100&quot;" time="0.0040" classname="Validation error when data: fields.0.field = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: fields.0.field = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;true&quot;" time="0.0030" classname="Validation error when data: fields.0.field = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: fields.0.field = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: fields.0.field = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;null&quot;" time="0.0050" classname="Validation error when data: fields.0.value = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;100&quot;" time="0.0030" classname="Validation error when data: fields.0.value = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: fields.0.value = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;true&quot;" time="0.0040" classname="Validation error when data: fields.0.value = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;[object Object]&quot;" time="0.0050" classname="Validation error when data: fields.0.value = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: fields.0.value = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: expire = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: expire = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: expire = &quot;true&quot;" time="0.0030" classname="Validation error when data: expire = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: expire = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: expire = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: expire = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: expire = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: expire = &quot;11.11&quot;" time="0.0050" classname="Validation error when data: expire = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: expire = &quot;0&quot;" time="0.0050" classname="Validation error when data: expire = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Validation Validation error when data: expire = &quot;2147483648&quot;" time="0.0030" classname="Validation error when data: expire = &quot;2147483648&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:37" tests="5" file="/usr/src/app/test/api/hash/POST-instance-id-hash.test.ts" time="0.0230" failures="0">
    <testcase name="POST /instance/:instanceId/hash Common Should create item with empty value" time="0.0050" classname="Should create item with empty value">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Common Should create item with key ttl" time="0.0080" classname="Should create item with key ttl">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Common Should create regular item" time="0.0040" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Common Should return conflict error if key already exists" time="0.0030" classname="Should return conflict error if key already exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:42:37" tests="3" file="/usr/src/app/test/api/hash/POST-instance-id-hash.test.ts" time="0.0140" failures="0">
    <testcase name="POST /instance/:instanceId/hash ACL Should create regular item" time="0.0040" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash ACL Should throw error if no permissions for &quot;hset&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;hset&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/hash ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PUT /instance/:instanceId/hash" timestamp="2022-06-30T06:42:37" tests="0" file="/usr/src/app/test/api/hash/PUT-instance-id-hash.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:37" tests="30" file="/usr/src/app/test/api/hash/PUT-instance-id-hash.test.ts" time="0.1250" failures="0">
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;null&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: fields = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields = &quot;null&quot;" time="0.0030" classname="Validation error when data: fields = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: fields = &quot;somestring&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields = &quot;100&quot;" time="0.0040" classname="Validation error when data: fields = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: fields = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields = &quot;true&quot;" time="0.0040" classname="Validation error when data: fields = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0 = &quot;null&quot;" time="0.0030" classname="Validation error when data: fields.0 = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0 = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: fields.0 = &quot;somestring&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0 = &quot;100&quot;" time="0.0030" classname="Validation error when data: fields.0 = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0 = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: fields.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0 = &quot;true&quot;" time="0.0030" classname="Validation error when data: fields.0 = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;null&quot;" time="0.0030" classname="Validation error when data: fields.0.field = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;100&quot;" time="0.0040" classname="Validation error when data: fields.0.field = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: fields.0.field = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;true&quot;" time="0.0030" classname="Validation error when data: fields.0.field = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;[object Object]&quot;" time="0.0050" classname="Validation error when data: fields.0.field = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.field = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: fields.0.field = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;null&quot;" time="0.0040" classname="Validation error when data: fields.0.value = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;100&quot;" time="0.0040" classname="Validation error when data: fields.0.value = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: fields.0.value = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;true&quot;" time="0.0030" classname="Validation error when data: fields.0.value = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: fields.0.value = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Validation Validation error when data: fields.0.value = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: fields.0.value = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:38" tests="3" file="/usr/src/app/test/api/hash/PUT-instance-id-hash.test.ts" time="0.0140" failures="0">
    <testcase name="PUT /instance/:instanceId/hash Common Should add new field and edit existing value" time="0.0060" classname="Should add new field and edit existing value">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:42:38" tests="3" file="/usr/src/app/test/api/hash/PUT-instance-id-hash.test.ts" time="0.0140" failures="0">
    <testcase name="PUT /instance/:instanceId/hash ACL Should create regular item" time="0.0050" classname="Should create regular item">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash ACL Should throw error if no permissions for &quot;hset&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;hset&quot; command">
    </testcase>
    <testcase name="PUT /instance/:instanceId/hash ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="GET /info/cli-blocking-commands" timestamp="2022-06-30T06:42:38" tests="1" file="/usr/src/app/test/api/info/GET-info-cli-blocking-commands.test.ts" time="0.0020" failures="0">
    <testcase name="GET /info/cli-blocking-commands Should return array with blocking Redis commands" time="0.0010" classname="Should return array with blocking Redis commands">
    </testcase>
  </testsuite>
  <testsuite name="GET /info/cli-unsupported-commands" timestamp="2022-06-30T06:42:38" tests="1" file="/usr/src/app/test/api/info/GET-info-cli-unsupported-commands.test.ts" time="0.0020" failures="0">
    <testcase name="GET /info/cli-unsupported-commands Should return array with unsupported commands for CLI tool" time="0.0020" classname="Should return array with unsupported commands for CLI tool">
    </testcase>
  </testsuite>
  <testsuite name="GET /info" timestamp="2022-06-30T06:42:38" tests="1" file="/usr/src/app/test/api/info/GET-info.test.ts" time="0.0060" failures="0">
    <testcase name="GET /info Should return server info" time="0.0050" classname="Should return server info">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /instance/:id" timestamp="2022-06-30T06:42:38" tests="0" file="/usr/src/app/test/api/instance/DELETE-instance-id.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:38" tests="2" file="/usr/src/app/test/api/instance/DELETE-instance-id.test.ts" time="0.0350" failures="0">
    <testcase name="DELETE /instance/:id Common Should remove single database" time="0.0300" classname="Should remove single database">
    </testcase>
    <testcase name="DELETE /instance/:id Common Should return Not Found Error" time="0.0040" classname="Should return Not Found Error">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /instance" timestamp="2022-06-30T06:42:38" tests="0" file="/usr/src/app/test/api/instance/DELETE-instance.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:38" tests="6" file="/usr/src/app/test/api/instance/DELETE-instance.test.ts" time="0.0170" failures="0">
    <testcase name="DELETE /instance Validation Validation error when data: ids = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: ids = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance Validation Validation error when data: ids = &quot;null&quot;" time="0.0020" classname="Validation error when data: ids = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance Validation Validation error when data: ids = &quot;somestring&quot;" time="0.0020" classname="Validation error when data: ids = &quot;somestring&quot;">
    </testcase>
    <testcase name="DELETE /instance Validation Validation error when data: ids = &quot;100&quot;" time="0.0020" classname="Validation error when data: ids = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance Validation Validation error when data: ids = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: ids = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance Validation Validation error when data: ids = &quot;true&quot;" time="0.0020" classname="Validation error when data: ids = &quot;true&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:38" tests="2" file="/usr/src/app/test/api/instance/DELETE-instance.test.ts" time="0.0410" failures="0">
    <testcase name="DELETE /instance Common Should remove multiple databases by ids" time="0.0350" classname="Should remove multiple databases by ids">
    </testcase>
    <testcase name="DELETE /instance Common Should return affected 0 since no databases found" time="0.0050" classname="Should return affected 0 since no databases found">
    </testcase>
  </testsuite>
  <testsuite name="GET /instance/:instanceId/connect" timestamp="2022-06-30T06:42:38" tests="3" file="/usr/src/app/test/api/instance/GET-instance-id-connect.test.ts" time="5.0890" failures="0">
    <testcase name="GET /instance/:instanceId/connect Should connect to a database" time="0.0290" classname="Should connect to a database">
    </testcase>
    <testcase name="GET /instance/:instanceId/connect Should not connect to a database due to misconfiguration" time="5.0110" classname="Should not connect to a database due to misconfiguration">
    </testcase>
    <testcase name="GET /instance/:instanceId/connect Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="GET /instance/:instanceId/info" timestamp="2022-06-30T06:42:43" tests="3" file="/usr/src/app/test/api/instance/GET-instance-id-info.test.ts" time="5.0220" failures="0">
    <testcase name="GET /instance/:instanceId/info Should connect to a database" time="0.0040" classname="Should connect to a database">
    </testcase>
    <testcase name="GET /instance/:instanceId/info Should not connect to a database due to misconfiguration" time="5.0090" classname="Should not connect to a database due to misconfiguration">
    </testcase>
    <testcase name="GET /instance/:instanceId/info Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="GET /instance/:instanceId/overview" timestamp="2022-06-30T06:42:48" tests="3" file="/usr/src/app/test/api/instance/GET-instance-id-overview.test.ts" time="0.0000" failures="0">
    <testcase name="GET /instance/:instanceId/overview Should get database overview" time="0.0050" classname="Should get database overview">
    </testcase>
    <testcase name="GET /instance/:instanceId/overview Should not connect to a database due to misconfiguration" time="5.0140" classname="Should not connect to a database due to misconfiguration">
    </testcase>
    <testcase name="GET /instance/:instanceId/overview Should return NotFound error if instance id does not exists" time="0.0160" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="Enterprise" timestamp="2022-06-30T06:42:53" tests="1" file="/usr/src/app/test/api/instance/GET-instance-id-overview.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="GET /instance" timestamp="2022-06-30T06:42:53" tests="1" file="/usr/src/app/test/api/instance/GET-instance.test.ts" time="0.4830" failures="0">
    <testcase name="GET /instance Should get instances list" time="0.0070" classname="Should get instances list">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /instance/:id/name" timestamp="2022-06-30T06:42:53" tests="0" file="/usr/src/app/test/api/instance/PATCH-instance-id-name.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:53" tests="8" file="/usr/src/app/test/api/instance/PATCH-instance-id-name.test.ts" time="0.0270" failures="0">
    <testcase name="PATCH /instance/:id/name Validation Validation error when data: newName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: newName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:id/name Validation Validation error when data: newName = &quot;null&quot;" time="0.0030" classname="Validation error when data: newName = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:id/name Validation Validation error when data: newName = &quot;100&quot;" time="0.0030" classname="Validation error when data: newName = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:id/name Validation Validation error when data: newName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: newName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:id/name Validation Validation error when data: newName = &quot;true&quot;" time="0.0020" classname="Validation error when data: newName = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:id/name Validation Validation error when data: newName = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: newName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:id/name Validation Validation error when data: newName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: newName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:id/name Validation Validation error when data: newName = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;" time="0.0030" classname="Validation error when data: newName = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:53" tests="2" file="/usr/src/app/test/api/instance/PATCH-instance-id-name.test.ts" time="0.0330" failures="0">
    <testcase name="PATCH /instance/:id/name Common Should change name for existing database" time="0.0270" classname="Should change name for existing database">
    </testcase>
    <testcase name="PATCH /instance/:id/name Common Should return Not Found Error" time="0.0060" classname="Should return Not Found Error">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/sentinel-masters" timestamp="2022-06-30T06:42:53" tests="0" file="/usr/src/app/test/api/instance/POST-instance-sentinel_masters.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:53" tests="3" file="/usr/src/app/test/api/instance/POST-instance-sentinel_masters.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="POST /instance" timestamp="2022-06-30T06:42:53" tests="0" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="STANDALONE" timestamp="2022-06-30T06:42:53" tests="0" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Create standalone instance without pass" timestamp="2022-06-30T06:42:53" tests="1" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0000" failures="0">
    <testcase name="POST /instance STANDALONE Create standalone instance without pass Create standalone without pass" time="4.9670" classname="Create standalone without pass">
    </testcase>
  </testsuite>
  <testsuite name="Enterprise" timestamp="2022-06-30T06:42:58" tests="1" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Oss" timestamp="2022-06-30T06:42:58" tests="1" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0690" failures="0">
    <testcase name="POST /instance STANDALONE Create standalone instance without pass Oss Create standalone with particular db index" time="0.0690" classname="Create standalone with particular db index">
    </testcase>
  </testsuite>
  <testsuite name="Create standalone instance with password" timestamp="2022-06-30T06:42:59" tests="1" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Create standalone instance tls" timestamp="2022-06-30T06:42:59" tests="4" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="Create standalone instance tls with certificate auth" timestamp="2022-06-30T06:42:59" tests="4" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0020" failures="0">
  </testsuite>
  <testsuite name="CLUSTER" timestamp="2022-06-30T06:42:59" tests="0" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Create cluster instance without pass" timestamp="2022-06-30T06:42:59" tests="2" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="TLS CA" timestamp="2022-06-30T06:42:59" tests="2" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="SENTINEL" timestamp="2022-06-30T06:42:59" tests="1" file="/usr/src/app/test/api/instance/POST-instance.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="PUT /instance/:id" timestamp="2022-06-30T06:42:59" tests="0" file="/usr/src/app/test/api/instance/PUT-instance-id.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:59" tests="20" file="/usr/src/app/test/api/instance/PUT-instance-id.test.ts" time="0.0700" failures="0">
    <testcase name="PUT /instance/:id Validation Validation error when data: name = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: name = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: name = &quot;null&quot;" time="0.0020" classname="Validation error when data: name = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: name = &quot;100&quot;" time="0.0030" classname="Validation error when data: name = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: name = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: name = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: name = &quot;true&quot;" time="0.0050" classname="Validation error when data: name = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: name = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: name = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: name = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: name = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: host = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: host = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: host = &quot;null&quot;" time="0.0030" classname="Validation error when data: host = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: host = &quot;100&quot;" time="0.0030" classname="Validation error when data: host = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: host = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: host = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: host = &quot;true&quot;" time="0.0030" classname="Validation error when data: host = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: host = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: host = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: host = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: host = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: port = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: port = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: port = &quot;null&quot;" time="0.0030" classname="Validation error when data: port = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: port = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: port = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: port = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: port = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: port = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: port = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:id Validation Validation error when data: port = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: port = &quot;11.11&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:59" tests="3" file="/usr/src/app/test/api/instance/PUT-instance-id.test.ts" time="0.0490" failures="0">
    <testcase name="PUT /instance/:id Common Should change data for existing database" time="0.0330" classname="Should change data for existing database">
    </testcase>
    <testcase name="PUT /instance/:id Common Should return 503 error if incorrect connection data provided" time="0.0090" classname="Should return 503 error if incorrect connection data provided">
    </testcase>
    <testcase name="PUT /instance/:id Common Should return Not Found Error" time="0.0060" classname="Should return Not Found Error">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /instance/:instanceId/keys" timestamp="2022-06-30T06:42:59" tests="0" file="/usr/src/app/test/api/keys/DELETE-instance-id-keys.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:42:59" tests="12" file="/usr/src/app/test/api/keys/DELETE-instance-id-keys.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:42:59" tests="7" file="/usr/src/app/test/api/keys/DELETE-instance-id-keys.test.ts" time="0.0000" failures="0">
    <testcase name="DELETE /instance/:instanceId/keys Common Should remove string" time="0.0040" classname="Should remove string">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/keys Common Should remove list" time="0.0030" classname="Should remove list">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/keys Common Should remove set" time="0.0030" classname="Should remove set">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/keys Common Should remove zset" time="0.0030" classname="Should remove zset">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/keys Common Should remove hash" time="0.0030" classname="Should remove hash">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/keys Common Should remove multiple keys" time="0.0290" classname="Should remove multiple keys">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/keys Common Should return NotFound error for not existing error" time="0.0040" classname="Should return NotFound error for not existing error">
    </testcase>
  </testsuite>
  <testsuite name="ReJSON-RL" timestamp="2022-06-30T06:42:59" tests="1" file="/usr/src/app/test/api/keys/DELETE-instance-id-keys.test.ts" time="0.0050" failures="0">
    <testcase name="DELETE /instance/:instanceId/keys Common ReJSON-RL Should remove ReJSON" time="0.0040" classname="Should remove ReJSON">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:42:59" tests="2" file="/usr/src/app/test/api/keys/DELETE-instance-id-keys.test.ts" time="0.0340" failures="0">
    <testcase name="DELETE /instance/:instanceId/keys ACL Should remove key" time="0.0030" classname="Should remove key">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/keys ACL Should throw error if no permissions for &quot;del&quot; command" time="0.0070" classname="Should throw error if no permissions for &quot;del&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="GET /instance/:instanceId/keys" timestamp="2022-06-30T06:42:59" tests="0" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Sandbox rte" timestamp="2022-06-30T06:42:59" tests="0" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Search (standalone + cluster)" timestamp="2022-06-30T06:42:59" tests="12" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.1640" failures="0">
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should find key by exact name" time="0.0120" classname="Should find key by exact name">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should not find key by exact name" time="0.0050" classname="Should not find key by exact name">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should prevent full scan in one request" time="0.0470" classname="Should prevent full scan in one request">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should search by with * in the end" time="0.0110" classname="Should search by with * in the end">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should search by with * in the beginning" time="0.0130" classname="Should search by with * in the beginning">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should search by with * in the middle" time="0.0080" classname="Should search by with * in the middle">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should search by with ? in the end" time="0.0100" classname="Should search by with ? in the end">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should search by with [a-b] glob pattern" time="0.0100" classname="Should search by with [a-b] glob pattern">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should search by with [a,b,c] glob pattern" time="0.0100" classname="Should search by with [a,b,c] glob pattern">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should search by with [abc] glob pattern" time="0.0080" classname="Should search by with [abc] glob pattern">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should search by with [^a] glob pattern" time="0.0090" classname="Should search by with [^a] glob pattern">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Search (standalone + cluster) Should search by with combined glob patterns" time="0.0150" classname="Should search by with combined glob patterns">
    </testcase>
  </testsuite>
  <testsuite name="Standalone" timestamp="2022-06-30T06:42:59" tests="3" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0000" failures="0">
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Should scan all types" time="0.0480" classname="Should scan all types">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Should scan by provided count value" time="0.0660" classname="Should scan by provided count value">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Should scan entire database" time="0.2000" classname="Should scan entire database">
    </testcase>
  </testsuite>
  <testsuite name="Filter by type" timestamp="2022-06-30T06:42:59" tests="5" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0000" failures="0">
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Filter by type Should filter by type (string)" time="0.0230" classname="Should filter by type (string)">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Filter by type Should filter by type (list)" time="0.0300" classname="Should filter by type (list)">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Filter by type Should filter by type (set)" time="0.0240" classname="Should filter by type (set)">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Filter by type Should filter by type (zset)" time="0.0240" classname="Should filter by type (zset)">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Filter by type Should filter by type (hash)" time="0.0240" classname="Should filter by type (hash)">
    </testcase>
  </testsuite>
  <testsuite name="REJSON-RL" timestamp="2022-06-30T06:42:59" tests="1" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0480" failures="0">
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Filter by type REJSON-RL Should filter by type (ReJSON-RL)" time="0.0230" classname="Should filter by type (ReJSON-RL)">
    </testcase>
  </testsuite>
  <testsuite name="TSDB-TYPE" timestamp="2022-06-30T06:42:59" tests="1" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0560" failures="0">
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Filter by type TSDB-TYPE Should filter by type (timeseries)" time="0.0280" classname="Should filter by type (timeseries)">
    </testcase>
  </testsuite>
  <testsuite name="Stream" timestamp="2022-06-30T06:43:00" tests="1" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0340" failures="0">
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Filter by type Stream Should filter by type (stream)" time="0.0270" classname="Should filter by type (stream)">
    </testcase>
  </testsuite>
  <testsuite name="Graph" timestamp="2022-06-30T06:43:00" tests="1" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.1330" failures="0">
    <testcase name="GET /instance/:instanceId/keys Sandbox rte Standalone Filter by type Graph Should filter by type (stream)" time="0.0230" classname="Should filter by type (stream)">
    </testcase>
  </testsuite>
  <testsuite name="Cluster" timestamp="2022-06-30T06:43:00" tests="3" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Filter by type" timestamp="2022-06-30T06:43:00" tests="1" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="non-ASCII keyName" timestamp="2022-06-30T06:43:00" tests="1" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0310" failures="0">
    <testcase name="GET /instance/:instanceId/keys Sandbox rte non-ASCII keyName check keyname with non-ASCII symbols should be properly listed" time="0.0070" classname="check keyname with non-ASCII symbols should be properly listed">
    </testcase>
  </testsuite>
  <testsuite name="Big data" timestamp="2022-06-30T06:43:00" tests="0" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Exact search on huge keys number" timestamp="2022-06-30T06:43:00" tests="1" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:00" tests="2" file="/usr/src/app/test/api/keys/GET-instance-id-keys.test.ts" time="0.0420" failures="0">
    <testcase name="GET /instance/:instanceId/keys ACL Should remove key" time="0.0080" classname="Should remove key">
    </testcase>
    <testcase name="GET /instance/:instanceId/keys ACL Should throw error if no permissions for &quot;scan&quot; command" time="0.0080" classname="Should throw error if no permissions for &quot;scan&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /instance/:instanceId/keys/name" timestamp="2022-06-30T06:43:00" tests="0" file="/usr/src/app/test/api/keys/PATCH-instance-id-keys-name.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:00" tests="14" file="/usr/src/app/test/api/keys/PATCH-instance-id-keys-name.test.ts" time="0.0530" failures="0">
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: newKeyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: newKeyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: newKeyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: newKeyName = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: newKeyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: newKeyName = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: newKeyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: newKeyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: newKeyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: newKeyName = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: newKeyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: newKeyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Validation Validation error when data: newKeyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: newKeyName = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:00" tests="6" file="/usr/src/app/test/api/keys/PATCH-instance-id-keys-name.test.ts" time="0.0000" failures="0">
    <testcase name="PATCH /instance/:instanceId/keys/name Common Should rename string" time="0.0040" classname="Should rename string">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Common Should rename list" time="0.0040" classname="Should rename list">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Common Should rename set" time="0.0030" classname="Should rename set">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Common Should rename zset" time="0.0040" classname="Should rename zset">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Common Should rename hash" time="0.0040" classname="Should rename hash">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name Common Should return NotFound error for not existing error" time="0.0050" classname="Should return NotFound error for not existing error">
    </testcase>
  </testsuite>
  <testsuite name="ReJSON-RL" timestamp="2022-06-30T06:43:00" tests="1" file="/usr/src/app/test/api/keys/PATCH-instance-id-keys-name.test.ts" time="0.0030" failures="0">
    <testcase name="PATCH /instance/:instanceId/keys/name Common ReJSON-RL Should rename ReJSON" time="0.0030" classname="Should rename ReJSON">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:00" tests="3" file="/usr/src/app/test/api/keys/PATCH-instance-id-keys-name.test.ts" time="0.0410" failures="0">
    <testcase name="PATCH /instance/:instanceId/keys/name ACL Should rename key" time="0.0030" classname="Should rename key">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/name ACL Should throw error if no permissions for &quot;renamenx&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;renamenx&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /instance/:instanceId/keys/ttl" timestamp="2022-06-30T06:43:00" tests="0" file="/usr/src/app/test/api/keys/PATCH-instance-id-keys-ttl.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:00" tests="15" file="/usr/src/app/test/api/keys/PATCH-instance-id-keys-ttl.test.ts" time="0.0580" failures="0">
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: ttl = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: ttl = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: ttl = &quot;null&quot;" time="0.0020" classname="Validation error when data: ttl = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: ttl = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: ttl = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: ttl = &quot;true&quot;" time="0.0040" classname="Validation error when data: ttl = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: ttl = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: ttl = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: ttl = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: ttl = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: ttl = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: ttl = &quot;11.11&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Validation Validation error when data: ttl = &quot;2147483648&quot;" time="0.0030" classname="Validation error when data: ttl = &quot;2147483648&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:00" tests="3" file="/usr/src/app/test/api/keys/PATCH-instance-id-keys-ttl.test.ts" time="0.0000" failures="0">
    <testcase name="PATCH /instance/:instanceId/keys/ttl Common Should set ttl for key" time="0.0050" classname="Should set ttl for key">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Common Should remove ttl for key" time="0.0040" classname="Should remove ttl for key">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl Common Should return NotFound error for not existing key error" time="0.0040" classname="Should return NotFound error for not existing key error">
    </testcase>
  </testsuite>
  <testsuite name="ReJSON-RL" timestamp="2022-06-30T06:43:00" tests="1" file="/usr/src/app/test/api/keys/PATCH-instance-id-keys-ttl.test.ts" time="0.0040" failures="0">
    <testcase name="PATCH /instance/:instanceId/keys/ttl Common ReJSON-RL Should set ttl for ReJSON" time="0.0030" classname="Should set ttl for ReJSON">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:00" tests="3" file="/usr/src/app/test/api/keys/PATCH-instance-id-keys-ttl.test.ts" time="0.0360" failures="0">
    <testcase name="PATCH /instance/:instanceId/keys/ttl ACL Should set ttl for key" time="0.0030" classname="Should set ttl for key">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl ACL Should throw error if no permissions for &quot;persist&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;persist&quot; command">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/keys/ttl ACL Should throw error if no permissions for &quot;expire&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;expire&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/keys/get-info" timestamp="2022-06-30T06:43:00" tests="0" file="/usr/src/app/test/api/keys/POST-instance-id-keys-get_info.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:00" tests="7" file="/usr/src/app/test/api/keys/POST-instance-id-keys-get_info.test.ts" time="0.0240" failures="0">
    <testcase name="POST /instance/:instanceId/keys/get-info Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:00" tests="6" file="/usr/src/app/test/api/keys/POST-instance-id-keys-get_info.test.ts" time="0.0000" failures="0">
    <testcase name="POST /instance/:instanceId/keys/get-info Common Should return string info" time="0.0050" classname="Should return string info">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Common Should return list info" time="0.0030" classname="Should return list info">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Common Should return set info" time="0.0040" classname="Should return set info">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Common Should return zset info" time="0.0030" classname="Should return zset info">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Common Should return hash info" time="0.0040" classname="Should return hash info">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info Common Should return NotFound error for not existing error" time="0.0030" classname="Should return NotFound error for not existing error">
    </testcase>
  </testsuite>
  <testsuite name="ReJSON-RL" timestamp="2022-06-30T06:43:00" tests="1" file="/usr/src/app/test/api/keys/POST-instance-id-keys-get_info.test.ts" time="0.0040" failures="0">
    <testcase name="POST /instance/:instanceId/keys/get-info Common ReJSON-RL Should return ReJSON info" time="0.0030" classname="Should return ReJSON info">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:00" tests="8" file="/usr/src/app/test/api/keys/POST-instance-id-keys-get_info.test.ts" time="0.0000" failures="0">
    <testcase name="POST /instance/:instanceId/keys/get-info ACL Should return key info" time="0.0030" classname="Should return key info">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info ACL Should throw error if no permissions for &quot;type&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;type&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info ACL Should return empty fields if no permission for (ttl, memory, strlen)" time="0.0170" classname="Should return empty fields if no permission for (ttl, memory, strlen)">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info ACL Should return empty fields if no permission for (ttl, memory, llen)" time="0.0060" classname="Should return empty fields if no permission for (ttl, memory, llen)">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info ACL Should return empty fields if no permission for (ttl, memory, scard)" time="0.0060" classname="Should return empty fields if no permission for (ttl, memory, scard)">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info ACL Should return empty fields if no permission for (ttl, memory, zcard)" time="0.0080" classname="Should return empty fields if no permission for (ttl, memory, zcard)">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info ACL Should return empty fields if no permission for (ttl, memory, zcard)" time="0.0050" classname="Should return empty fields if no permission for (ttl, memory, zcard)">
    </testcase>
    <testcase name="POST /instance/:instanceId/keys/get-info ACL Should return empty fields if no permission for (ttl, memory, usage, hlen)" time="0.0060" classname="Should return empty fields if no permission for (ttl, memory, usage, hlen)">
    </testcase>
  </testsuite>
  <testsuite name="ReJSON-RL" timestamp="2022-06-30T06:43:00" tests="1" file="/usr/src/app/test/api/keys/POST-instance-id-keys-get_info.test.ts" time="0.0060" failures="0">
    <testcase name="POST /instance/:instanceId/keys/get-info ACL ReJSON-RL Should return empty fields if no permission for (ttl, memory, json.type)" time="0.0060" classname="Should return empty fields if no permission for (ttl, memory, json.type)">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /instance/:instanceId/list/elements" timestamp="2022-06-30T06:43:00" tests="0" file="/usr/src/app/test/api/list/DELETE-instance-id-list-elements.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:00" tests="20" file="/usr/src/app/test/api/list/DELETE-instance-id-list-elements.test.ts" time="0.0810" failures="0">
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: destination = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: destination = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: destination = &quot;null&quot;" time="0.0040" classname="Validation error when data: destination = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: destination = &quot;100&quot;" time="0.0040" classname="Validation error when data: destination = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: destination = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: destination = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: destination = &quot;true&quot;" time="0.0050" classname="Validation error when data: destination = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: destination = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: destination = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: destination = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: destination = &quot;some,array&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: count = &quot;null&quot;" time="0.0030" classname="Validation error when data: count = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: count = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: count = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: count = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: count = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: count = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: count = &quot;some,array&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: count = &quot;11.11&quot;" time="0.0040" classname="Validation error when data: count = &quot;11.11&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Validation Validation error when data: count = &quot;0&quot;" time="0.0040" classname="Validation error when data: count = &quot;0&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:00" tests="0" file="/usr/src/app/test/api/list/DELETE-instance-id-list-elements.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Only one element for redis &lt; 6.2" timestamp="2022-06-30T06:43:00" tests="3" file="/usr/src/app/test/api/list/DELETE-instance-id-list-elements.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Multiple elements for redis &gt;= 6.2" timestamp="2022-06-30T06:43:00" tests="3" file="/usr/src/app/test/api/list/DELETE-instance-id-list-elements.test.ts" time="0.0370" failures="0">
    <testcase name="DELETE /instance/:instanceId/list/elements Common Multiple elements for redis &gt;= 6.2 Should delete 2 element from the tail" time="0.0050" classname="Should delete 2 element from the tail">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Common Multiple elements for redis &gt;= 6.2 Should delete 10 elements from the head" time="0.0040" classname="Should delete 10 elements from the head">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements Common Multiple elements for redis &gt;= 6.2 Should delete all elements and key" time="0.0070" classname="Should delete all elements and key">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:00" tests="3" file="/usr/src/app/test/api/list/DELETE-instance-id-list-elements.test.ts" time="0.0120" failures="0">
    <testcase name="DELETE /instance/:instanceId/list/elements ACL Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements ACL Should throw error if no permissions for &quot;lpop&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;lpop&quot; command">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/list/elements ACL Should throw error if no permissions for &quot;rpop&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;rpop&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /instance/:instanceId/list" timestamp="2022-06-30T06:43:00" tests="0" file="/usr/src/app/test/api/list/PATCH-instance-id-list.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:00" tests="20" file="/usr/src/app/test/api/list/PATCH-instance-id-list.test.ts" time="0.0780" failures="0">
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: keyName = &quot;100&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: element = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: element = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: element = &quot;null&quot;" time="0.0030" classname="Validation error when data: element = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: element = &quot;100&quot;" time="0.0030" classname="Validation error when data: element = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: element = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: element = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: element = &quot;true&quot;" time="0.0030" classname="Validation error when data: element = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: element = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: element = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: element = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: element = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: index = &quot;null&quot;" time="0.0040" classname="Validation error when data: index = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: index = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: index = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: index = &quot;true&quot;" time="0.0030" classname="Validation error when data: index = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: index = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: index = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: index = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: index = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Validation Validation error when data: index = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: index = &quot;11.11&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:00" tests="5" file="/usr/src/app/test/api/list/PATCH-instance-id-list.test.ts" time="0.0190" failures="0">
    <testcase name="PATCH /instance/:instanceId/list Common Should modify item with empty value on position 0" time="0.0040" classname="Should modify item with empty value on position 0">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Common Should return BadRequest error if index is out of range" time="0.0030" classname="Should return BadRequest error if index is out of range">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:00" tests="3" file="/usr/src/app/test/api/list/PATCH-instance-id-list.test.ts" time="0.0140" failures="0">
    <testcase name="PATCH /instance/:instanceId/list ACL Should create regular item" time="0.0040" classname="Should create regular item">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list ACL Should throw error if no permissions for &quot;lset&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;lset&quot; command">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/list ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/list/get-elements/:index" timestamp="2022-06-30T06:43:00" tests="0" file="/usr/src/app/test/api/list/POST-instance-id-list-get_elements-index.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:00" tests="7" file="/usr/src/app/test/api/list/POST-instance-id-list-get_elements-index.test.ts" time="0.0250" failures="0">
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:00" tests="8" file="/usr/src/app/test/api/list/POST-instance-id-list-get_elements-index.test.ts" time="0.0000" failures="0">
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Common Should select key from position 0 (by default)" time="0.0050" classname="Should select key from position 0 (by default)">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Common Should select key from position 0" time="0.0030" classname="Should select key from position 0">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Common Should select key from position 1" time="0.0030" classname="Should select key from position 1">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Common Should select key from position 99" time="0.0030" classname="Should select key from position 99">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Common Should select key from position -1" time="0.0030" classname="Should select key from position -1">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Common Should select key from position -2" time="0.0030" classname="Should select key from position -2">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="Search in huge number of elements" timestamp="2022-06-30T06:43:01" tests="1" file="/usr/src/app/test/api/list/POST-instance-id-list-get_elements-index.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:01" tests="2" file="/usr/src/app/test/api/list/POST-instance-id-list-get_elements-index.test.ts" time="0.0070" failures="0">
    <testcase name="POST /instance/:instanceId/list/get-elements/:index ACL Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements/:index ACL Should throw error if no permissions for &quot;lindex&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;lindex&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/list/get-elements" timestamp="2022-06-30T06:43:01" tests="0" file="/usr/src/app/test/api/list/POST-instance-id-list-get_elements.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:01" tests="19" file="/usr/src/app/test/api/list/POST-instance-id-list-get_elements.test.ts" time="0.0940" failures="0">
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: offset = &quot;null&quot;" time="0.0030" classname="Validation error when data: offset = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: offset = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: offset = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: offset = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: offset = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: offset = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: offset = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: offset = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: offset = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: offset = &quot;-1&quot;" time="0.0030" classname="Validation error when data: offset = &quot;-1&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: count = &quot;null&quot;" time="0.0050" classname="Validation error when data: count = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: count = &quot;stringvalue&quot;" time="0.0070" classname="Validation error when data: count = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: count = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: count = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: count = &quot;some,array&quot;" time="0.0110" classname="Validation error when data: count = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: count = &quot;11.11&quot;" time="0.0080" classname="Validation error when data: count = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Validation Validation error when data: count = &quot;0&quot;" time="0.0110" classname="Validation error when data: count = &quot;0&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:01" tests="5" file="/usr/src/app/test/api/list/POST-instance-id-list-get_elements.test.ts" time="0.0740" failures="0">
    <testcase name="POST /instance/:instanceId/list/get-elements Common Should select all keys" time="0.0140" classname="Should select all keys">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Common Should select last 50 keys" time="0.0060" classname="Should select last 50 keys">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Common Should select first 50 keys" time="0.0110" classname="Should select first 50 keys">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:01" tests="3" file="/usr/src/app/test/api/list/POST-instance-id-list-get_elements.test.ts" time="0.0160" failures="0">
    <testcase name="POST /instance/:instanceId/list/get-elements ACL Should create regular item" time="0.0040" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements ACL Should throw error if no permissions for &quot;llen&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;llen&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/list/get-elements ACL Should throw error if no permissions for &quot;lrange&quot; command" time="0.0060" classname="Should throw error if no permissions for &quot;lrange&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/list" timestamp="2022-06-30T06:43:01" tests="0" file="/usr/src/app/test/api/list/POST-instance-id-list.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:01" tests="21" file="/usr/src/app/test/api/list/POST-instance-id-list.test.ts" time="0.0780" failures="0">
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: keyName = &quot;100&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: element = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: element = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: element = &quot;null&quot;" time="0.0030" classname="Validation error when data: element = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: element = &quot;100&quot;" time="0.0030" classname="Validation error when data: element = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: element = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: element = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: element = &quot;true&quot;" time="0.0030" classname="Validation error when data: element = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: element = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: element = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: element = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: element = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: expire = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: expire = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: expire = &quot;true&quot;" time="0.0060" classname="Validation error when data: expire = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: expire = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: expire = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: expire = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: expire = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: expire = &quot;11.11&quot;" time="0.0040" classname="Validation error when data: expire = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: expire = &quot;0&quot;" time="0.0030" classname="Validation error when data: expire = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Validation Validation error when data: expire = &quot;2147483648&quot;" time="0.0030" classname="Validation error when data: expire = &quot;2147483648&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:01" tests="5" file="/usr/src/app/test/api/list/POST-instance-id-list.test.ts" time="0.0210" failures="0">
    <testcase name="POST /instance/:instanceId/list Common Should create item with empty value" time="0.0050" classname="Should create item with empty value">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Common Should create item with key ttl" time="0.0040" classname="Should create item with key ttl">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Common Should create regular item" time="0.0040" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Common Should return conflict error if key already exists" time="0.0040" classname="Should return conflict error if key already exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/list Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:01" tests="3" file="/usr/src/app/test/api/list/POST-instance-id-list.test.ts" time="0.0120" failures="0">
    <testcase name="POST /instance/:instanceId/list ACL Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/list ACL Should throw error if no permissions for &quot;lpush&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;lpush&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/list ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PUT /instance/:instanceId/list" timestamp="2022-06-30T06:43:01" tests="0" file="/usr/src/app/test/api/list/PUT-instance-id-list.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:01" tests="20" file="/usr/src/app/test/api/list/PUT-instance-id-list.test.ts" time="0.0950" failures="0">
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: keyName = &quot;null&quot;" time="0.0160" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: element = &quot;undefined&quot;" time="0.0020" classname="Validation error when data: element = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: element = &quot;null&quot;" time="0.0040" classname="Validation error when data: element = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: element = &quot;100&quot;" time="0.0030" classname="Validation error when data: element = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: element = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: element = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: element = &quot;true&quot;" time="0.0030" classname="Validation error when data: element = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: element = &quot;[object Object]&quot;" time="0.0050" classname="Validation error when data: element = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: element = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: element = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: destination = &quot;null&quot;" time="0.0020" classname="Validation error when data: destination = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: destination = &quot;100&quot;" time="0.0020" classname="Validation error when data: destination = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: destination = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: destination = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: destination = &quot;true&quot;" time="0.0030" classname="Validation error when data: destination = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: destination = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: destination = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Validation Validation error when data: destination = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: destination = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:01" tests="5" file="/usr/src/app/test/api/list/PUT-instance-id-list.test.ts" time="0.0430" failures="0">
    <testcase name="PUT /instance/:instanceId/list Common Should insert 1 element to the tail (by default)" time="0.0050" classname="Should insert 1 element to the tail (by default)">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Common Should insert 1 element to the tail" time="0.0030" classname="Should insert 1 element to the tail">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Common Should insert 1 element to the head" time="0.0030" classname="Should insert 1 element to the head">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:01" tests="3" file="/usr/src/app/test/api/list/PUT-instance-id-list.test.ts" time="0.0110" failures="0">
    <testcase name="PUT /instance/:instanceId/list ACL Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list ACL Should throw error if no permissions for &quot;lpushx&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;lpushx&quot; command">
    </testcase>
    <testcase name="PUT /instance/:instanceId/list ACL Should throw error if no permissions for &quot;rpushx&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;rpushx&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="GET /notifications" timestamp="2022-06-30T06:43:01" tests="1" file="/usr/src/app/test/api/notifications/GET-notifications.test.ts" time="0.0430" failures="0">
    <testcase name="GET /notifications Should get ordered notifications list" time="0.0060" classname="Should get ordered notifications list">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /notifications/read" timestamp="2022-06-30T06:43:01" tests="1" file="/usr/src/app/test/api/notifications/PATCH-notifications.test.ts" time="0.0570" failures="0">
    <testcase name="PATCH /notifications/read Should set all notifications into read state" time="0.0210" classname="Should set all notifications into read state">
    </testcase>
  </testsuite>
  <testsuite name="WS sync" timestamp="2022-06-30T06:43:01" tests="1" file="/usr/src/app/test/api/notifications/WS-global-sync.test.ts" time="4.0850" failures="1">
    <testcase name="WS sync Should sync notifications and remove not existing in json from local db" time="4.0410" classname="Should sync notifications and remove not existing in json from local db">
      <failure message="expected { Object (read, type, ...) } to equal undefined" type="AssertionError"><![CDATA[AssertionError: expected { Object (read, type, ...) } to equal undefined
    at Context.<anonymous> (test/api/notifications/WS-global-sync.test.ts:37:11)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="GET /instance/:instanceId/plugins/commands" timestamp="2022-06-30T06:43:05" tests="3" file="/usr/src/app/test/api/plugins/GET-instance-id-plugins-commands.test.ts" time="9.1800" failures="0">
    <testcase name="GET /instance/:instanceId/plugins/commands Should get plugin commands whitelist" time="2.6620" classname="Should get plugin commands whitelist">
    </testcase>
    <testcase name="GET /instance/:instanceId/plugins/commands Should not connect to a database due to misconfiguration" time="6.4720" classname="Should not connect to a database due to misconfiguration">
    </testcase>
    <testcase name="GET /instance/:instanceId/plugins/commands Should return NotFound error if instance id does not exists" time="0.0040" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/plugins/:vId/command-executions/:id/state" timestamp="2022-06-30T06:43:14" tests="0" file="/usr/src/app/test/api/plugins/GET-instance-id-plugins-id-command_executions-id-state.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:14" tests="2" file="/usr/src/app/test/api/plugins/GET-instance-id-plugins-id-command_executions-id-state.test.ts" time="0.0540" failures="0">
    <testcase name="POST /instance/:instanceId/plugins/:vId/command-executions/:id/state Common Should return 404 not found when incorrect instance" time="0.0030" classname="Should return 404 not found when incorrect instance">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/:vId/command-executions/:id/state Common Should get string" time="0.0490" classname="Should get string">
    </testcase>
  </testsuite>
  <testsuite name="GET /plugins" timestamp="2022-06-30T06:43:14" tests="1" file="/usr/src/app/test/api/plugins/GET-plugins.test.ts" time="0.0080" failures="0">
    <testcase name="GET /plugins Should get plugin commands whitelist" time="0.0080" classname="Should get plugin commands whitelist">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/plugins/command-executions" timestamp="2022-06-30T06:43:14" tests="0" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:14" tests="35" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.1170" failures="0">
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: command = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: command = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: command = &quot;null&quot;" time="0.0030" classname="Validation error when data: command = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: command = &quot;100&quot;" time="0.0060" classname="Validation error when data: command = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: command = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: command = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: command = &quot;true&quot;" time="0.0020" classname="Validation error when data: command = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: command = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: command = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: command = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: command = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: role = &quot;100&quot;" time="0.0020" classname="Validation error when data: role = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: role = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: role = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: role = &quot;true&quot;" time="0.0020" classname="Validation error when data: role = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: role = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: role = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: role = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: role = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions = &quot;somestring&quot;" time="0.0020" classname="Validation error when data: nodeOptions = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions = &quot;100&quot;" time="0.0030" classname="Validation error when data: nodeOptions = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: nodeOptions = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions = &quot;true&quot;" time="0.0040" classname="Validation error when data: nodeOptions = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.host = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: nodeOptions.host = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.host = &quot;null&quot;" time="0.0030" classname="Validation error when data: nodeOptions.host = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.host = &quot;100&quot;" time="0.0030" classname="Validation error when data: nodeOptions.host = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.host = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: nodeOptions.host = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.host = &quot;true&quot;" time="0.0040" classname="Validation error when data: nodeOptions.host = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.host = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: nodeOptions.host = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.host = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: nodeOptions.host = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.port = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: nodeOptions.port = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.port = &quot;null&quot;" time="0.0030" classname="Validation error when data: nodeOptions.port = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.port = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: nodeOptions.port = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.port = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: nodeOptions.port = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.port = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: nodeOptions.port = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.enableRedirection = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: nodeOptions.enableRedirection = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.enableRedirection = &quot;null&quot;" time="0.0030" classname="Validation error when data: nodeOptions.enableRedirection = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.enableRedirection = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: nodeOptions.enableRedirection = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.enableRedirection = &quot;100&quot;" time="0.0040" classname="Validation error when data: nodeOptions.enableRedirection = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.enableRedirection = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: nodeOptions.enableRedirection = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.enableRedirection = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: nodeOptions.enableRedirection = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Validation Validation error when data: nodeOptions.enableRedirection = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: nodeOptions.enableRedirection = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:15" tests="0" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="String" timestamp="2022-06-30T06:43:15" tests="2" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.8590" failures="0">
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common String Should return 404 not found when incorrect instance" time="0.0050" classname="Should return 404 not found when incorrect instance">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common String Should get string" time="0.8530" classname="Should get string">
    </testcase>
  </testsuite>
  <testsuite name="RediSearch" timestamp="2022-06-30T06:43:15" tests="1" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.0050" failures="0">
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common RediSearch Should support ft.info command (whitelist case insensitive check)" time="0.0040" classname="Should support ft.info command (whitelist case insensitive check)">
    </testcase>
  </testsuite>
  <testsuite name="Bad commands" timestamp="2022-06-30T06:43:15" tests="8" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.0260" failures="0">
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common Bad commands Should return error if try to run unsupported command (monitor)" time="0.0030" classname="Should return error if try to run unsupported command (monitor)">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common Bad commands Should return error if try to run unsupported command (subscribe)" time="0.0020" classname="Should return error if try to run unsupported command (subscribe)">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common Bad commands Should return error if try to run unsupported command (psubscribe)" time="0.0030" classname="Should return error if try to run unsupported command (psubscribe)">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common Bad commands Should return error if try to run unsupported command (sync)" time="0.0020" classname="Should return error if try to run unsupported command (sync)">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common Bad commands Should return error if try to run unsupported command (psync)" time="0.0020" classname="Should return error if try to run unsupported command (psync)">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common Bad commands Should return error if try to run unsupported command (script debug)" time="0.0020" classname="Should return error if try to run unsupported command (script debug)">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common Bad commands Should return error if try to run blocking command" time="0.0030" classname="Should return error if try to run blocking command">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common Bad commands Should return error if try to run not readonly command" time="0.0020" classname="Should return error if try to run not readonly command">
    </testcase>
  </testsuite>
  <testsuite name="History items limit" timestamp="2022-06-30T06:43:15" tests="1" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="29.2090" failures="0">
    <testcase name="POST /instance/:instanceId/plugins/command-executions Common History items limit Number of history items should be less then 30" time="29.2080" classname="Number of history items should be less then 30">
    </testcase>
  </testsuite>
  <testsuite name="Standalone + Sentinel" timestamp="2022-06-30T06:43:45" tests="0" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Incorrect requests for redis client type" timestamp="2022-06-30T06:43:45" tests="2" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.0110" failures="0">
    <testcase name="POST /instance/:instanceId/plugins/command-executions Standalone + Sentinel Incorrect requests for redis client type Should return error if try to execute command for role for standalone database" time="0.0050" classname="Should return error if try to execute command for role for standalone database">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/command-executions Standalone + Sentinel Incorrect requests for redis client type Should return error if try to execute command for particular node for standalone database" time="0.0040" classname="Should return error if try to execute command for particular node for standalone database">
    </testcase>
  </testsuite>
  <testsuite name="Cluster" timestamp="2022-06-30T06:43:45" tests="0" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Commands using role" timestamp="2022-06-30T06:43:45" tests="3" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="Commands using nodeOptions" timestamp="2022-06-30T06:43:45" tests="2" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-command_executions.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="POST /instance/:instanceId/plugins/:vId/command-executions/:id/state" timestamp="2022-06-30T06:43:45" tests="0" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-id-command_executions-id-state.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:45" tests="1" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-id-command_executions-id-state.test.ts" time="0.0060" failures="0">
    <testcase name="POST /instance/:instanceId/plugins/:vId/command-executions/:id/state Validation Validation error when data: state = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: state = &quot;undefined&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:45" tests="4" file="/usr/src/app/test/api/plugins/POST-instance-id-plugins-id-command_executions-id-state.test.ts" time="0.1520" failures="0">
    <testcase name="POST /instance/:instanceId/plugins/:vId/command-executions/:id/state Common Should return 404 not found when incorrect instance" time="0.0070" classname="Should return 404 not found when incorrect instance">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/:vId/command-executions/:id/state Common Should set string" time="0.0470" classname="Should set string">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/:vId/command-executions/:id/state Common Should set empty string" time="0.0470" classname="Should set empty string">
    </testcase>
    <testcase name="POST /instance/:instanceId/plugins/:vId/command-executions/:id/state Common Should set null state" time="0.0480" classname="Should set null state">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/pub-sub/messages" timestamp="2022-06-30T06:43:45" tests="0" file="/usr/src/app/test/api/pub-sub/POST-instance-id-pub-sub-messages.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:45" tests="14" file="/usr/src/app/test/api/pub-sub/POST-instance-id-pub-sub-messages.test.ts" time="0.0430" failures="0">
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: channel = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: channel = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: channel = &quot;null&quot;" time="0.0030" classname="Validation error when data: channel = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: channel = &quot;100&quot;" time="0.0030" classname="Validation error when data: channel = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: channel = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: channel = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: channel = &quot;true&quot;" time="0.0020" classname="Validation error when data: channel = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: channel = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: channel = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: channel = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: channel = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: message = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: message = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: message = &quot;null&quot;" time="0.0030" classname="Validation error when data: message = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: message = &quot;100&quot;" time="0.0030" classname="Validation error when data: message = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: message = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: message = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: message = &quot;true&quot;" time="0.0030" classname="Validation error when data: message = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: message = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: message = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Validation Validation error when data: message = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: message = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:45" tests="2" file="/usr/src/app/test/api/pub-sub/POST-instance-id-pub-sub-messages.test.ts" time="0.0110" failures="0">
    <testcase name="POST /instance/:instanceId/pub-sub/messages Common Should send message" time="0.0030" classname="Should send message">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages Common Should return NotFound error if instance id does not exists" time="0.0060" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:45" tests="2" file="/usr/src/app/test/api/pub-sub/POST-instance-id-pub-sub-messages.test.ts" time="0.0590" failures="0">
    <testcase name="POST /instance/:instanceId/pub-sub/messages ACL Should publish method" time="0.0280" classname="Should publish method">
    </testcase>
    <testcase name="POST /instance/:instanceId/pub-sub/messages ACL Should throw error if no permissions for &quot;publish&quot; command" time="0.0060" classname="Should throw error if no permissions for &quot;publish&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /instance/:instanceId/rejson-rl" timestamp="2022-06-30T06:43:45" tests="0" file="/usr/src/app/test/api/rejson-rl/DELETE-instance-id-rejson_rl.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:45" tests="14" file="/usr/src/app/test/api/rejson-rl/DELETE-instance-id-rejson_rl.test.ts" time="0.0550" failures="0">
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;null&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;true&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: path = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: path = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: path = &quot;null&quot;" time="0.0060" classname="Validation error when data: path = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: path = &quot;100&quot;" time="0.0040" classname="Validation error when data: path = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: path = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: path = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: path = &quot;true&quot;" time="0.0030" classname="Validation error when data: path = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: path = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: path = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Validation Validation error when data: path = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: path = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:45" tests="5" file="/usr/src/app/test/api/rejson-rl/DELETE-instance-id-rejson_rl.test.ts" time="0.0240" failures="0">
    <testcase name="DELETE /instance/:instanceId/rejson-rl Common Should delete element from nested object by path" time="0.0060" classname="Should delete element from nested object by path">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Common Should delete element from array by path" time="0.0040" classname="Should delete element from array by path">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Common Should not affect json if not existing path" time="0.0050" classname="Should not affect json if not existing path">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Common Should delete entire json and remove the key" time="0.0050" classname="Should delete entire json and remove the key">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:45" tests="2" file="/usr/src/app/test/api/rejson-rl/DELETE-instance-id-rejson_rl.test.ts" time="0.0100" failures="0">
    <testcase name="DELETE /instance/:instanceId/rejson-rl ACL Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/rejson-rl ACL Should throw error if no permissions for &quot;json.del&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;json.del&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /instance/:instanceId/rejson-rl/arrappend" timestamp="2022-06-30T06:43:45" tests="0" file="/usr/src/app/test/api/rejson-rl/PATCH-instance-id-rejson_rl-arrappend.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:45" tests="27" file="/usr/src/app/test/api/rejson-rl/PATCH-instance-id-rejson_rl-arrappend.test.ts" time="0.1000" failures="0">
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: keyName = &quot;null&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: data = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data = &quot;null&quot;" time="0.0030" classname="Validation error when data: data = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data = &quot;somestring&quot;" time="0.0050" classname="Validation error when data: data = &quot;somestring&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data = &quot;100&quot;" time="0.0030" classname="Validation error when data: data = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: data = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data = &quot;true&quot;" time="0.0030" classname="Validation error when data: data = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data.0 = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: data.0 = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data.0 = &quot;null&quot;" time="0.0040" classname="Validation error when data: data.0 = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data.0 = &quot;100&quot;" time="0.0040" classname="Validation error when data: data.0 = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data.0 = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: data.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data.0 = &quot;true&quot;" time="0.0030" classname="Validation error when data: data.0 = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data.0 = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: data.0 = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: data.0 = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: data.0 = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: path = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: path = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: path = &quot;null&quot;" time="0.0030" classname="Validation error when data: path = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: path = &quot;100&quot;" time="0.0030" classname="Validation error when data: path = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: path = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: path = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: path = &quot;true&quot;" time="0.0030" classname="Validation error when data: path = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: path = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: path = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Validation Validation error when data: path = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: path = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:45" tests="4" file="/usr/src/app/test/api/rejson-rl/PATCH-instance-id-rejson_rl-arrappend.test.ts" time="0.0140" failures="0">
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Common Should append array" time="0.0030" classname="Should append array">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Common Should append multiple items into array.array" time="0.0040" classname="Should append multiple items into array.array">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Common Should return BadRequest if try to append to not array item" time="0.0040" classname="Should return BadRequest if try to append to not array item">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:45" tests="2" file="/usr/src/app/test/api/rejson-rl/PATCH-instance-id-rejson_rl-arrappend.test.ts" time="0.0080" failures="0">
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend ACL Should modify json" time="0.0030" classname="Should modify json">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/arrappend ACL Should throw error if no permissions for &quot;json.arrappend&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;json.arrappend&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /instance/:instanceId/rejson-rl/set" timestamp="2022-06-30T06:43:45" tests="0" file="/usr/src/app/test/api/rejson-rl/PATCH-instance-id-rejson_rl-set.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:45" tests="21" file="/usr/src/app/test/api/rejson-rl/PATCH-instance-id-rejson_rl-set.test.ts" time="0.0740" failures="0">
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: data = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: data = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: data = &quot;null&quot;" time="0.0030" classname="Validation error when data: data = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: data = &quot;100&quot;" time="0.0030" classname="Validation error when data: data = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: data = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: data = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: data = &quot;true&quot;" time="0.0030" classname="Validation error when data: data = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: data = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: data = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: data = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: data = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: path = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: path = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: path = &quot;null&quot;" time="0.0020" classname="Validation error when data: path = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: path = &quot;100&quot;" time="0.0030" classname="Validation error when data: path = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: path = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: path = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: path = &quot;true&quot;" time="0.0030" classname="Validation error when data: path = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: path = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: path = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Validation Validation error when data: path = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: path = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:45" tests="5" file="/usr/src/app/test/api/rejson-rl/PATCH-instance-id-rejson_rl-set.test.ts" time="0.0170" failures="0">
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Common Should modify item with empty value" time="0.0040" classname="Should modify item with empty value">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Common Should modify item with null value" time="0.0040" classname="Should modify item with null value">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Common Should modify item with array in the root" time="0.0030" classname="Should modify item with array in the root">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Common Should modify item with object in the root" time="0.0030" classname="Should modify item with object in the root">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:45" tests="2" file="/usr/src/app/test/api/rejson-rl/PATCH-instance-id-rejson_rl-set.test.ts" time="0.0090" failures="0">
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set ACL Should modify json" time="0.0040" classname="Should modify json">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/rejson-rl/set ACL Should throw error if no permissions for &quot;json.set&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;json.set&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/rejson-rl/get" timestamp="2022-06-30T06:43:45" tests="0" file="/usr/src/app/test/api/rejson-rl/POST-instance-id-rejson_rl-get.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:45" tests="19" file="/usr/src/app/test/api/rejson-rl/POST-instance-id-rejson_rl-get.test.ts" time="0.0680" failures="0">
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: path = &quot;null&quot;" time="0.0030" classname="Validation error when data: path = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: path = &quot;100&quot;" time="0.0050" classname="Validation error when data: path = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: path = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: path = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: path = &quot;true&quot;" time="0.0030" classname="Validation error when data: path = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: path = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: path = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: path = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: path = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: forceRetrieve = &quot;null&quot;" time="0.0030" classname="Validation error when data: forceRetrieve = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: forceRetrieve = &quot;stringvalue&quot;" time="0.0040" classname="Validation error when data: forceRetrieve = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: forceRetrieve = &quot;100&quot;" time="0.0030" classname="Validation error when data: forceRetrieve = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: forceRetrieve = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: forceRetrieve = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: forceRetrieve = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: forceRetrieve = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Validation Validation error when data: forceRetrieve = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: forceRetrieve = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:45" tests="4" file="/usr/src/app/test/api/rejson-rl/POST-instance-id-rejson_rl-get.test.ts" time="0.0160" failures="0">
    <testcase name="POST /instance/:instanceId/rejson-rl/get Common Should force get entire json" time="0.0060" classname="Should force get entire json">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Common Should get nested object" time="0.0030" classname="Should get nested object">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Common Should get nested array value (downloaded true due to size)" time="0.0030" classname="Should get nested array value (downloaded true due to size)">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl/get Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="Large key value" timestamp="2022-06-30T06:43:45" tests="2" file="/usr/src/app/test/api/rejson-rl/POST-instance-id-rejson_rl-get.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:45" tests="8" file="/usr/src/app/test/api/rejson-rl/POST-instance-id-rejson_rl-get.test.ts" time="0.0020" failures="0">
  </testsuite>
  <testsuite name="POST /instance/:instanceId/rejson-rl" timestamp="2022-06-30T06:43:45" tests="0" file="/usr/src/app/test/api/rejson-rl/POST-instance-id-rejson_rl.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:45" tests="21" file="/usr/src/app/test/api/rejson-rl/POST-instance-id-rejson_rl.test.ts" time="0.0770" failures="0">
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: data = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: data = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: data = &quot;null&quot;" time="0.0030" classname="Validation error when data: data = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: data = &quot;100&quot;" time="0.0030" classname="Validation error when data: data = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: data = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: data = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: data = &quot;true&quot;" time="0.0040" classname="Validation error when data: data = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: data = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: data = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: data = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: data = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: expire = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: expire = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: expire = &quot;true&quot;" time="0.0040" classname="Validation error when data: expire = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: expire = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: expire = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: expire = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: expire = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: expire = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: expire = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: expire = &quot;0&quot;" time="0.0030" classname="Validation error when data: expire = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Validation Validation error when data: expire = &quot;2147483648&quot;" time="0.0030" classname="Validation error when data: expire = &quot;2147483648&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:46" tests="8" file="/usr/src/app/test/api/rejson-rl/POST-instance-id-rejson_rl.test.ts" time="0.0290" failures="0">
    <testcase name="POST /instance/:instanceId/rejson-rl Common Should create item with empty value" time="0.0040" classname="Should create item with empty value">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Common Should create item with null" time="0.0040" classname="Should create item with null">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Common Should create item with boolean" time="0.0030" classname="Should create item with boolean">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Common Should create item with array" time="0.0030" classname="Should create item with array">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Common Should create item with object" time="0.0040" classname="Should create item with object">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Common Should create item with key ttl" time="0.0040" classname="Should create item with key ttl">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Common Should return conflict error if key already exists" time="0.0030" classname="Should return conflict error if key already exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:46" tests="2" file="/usr/src/app/test/api/rejson-rl/POST-instance-id-rejson_rl.test.ts" time="0.0110" failures="0">
    <testcase name="POST /instance/:instanceId/rejson-rl ACL Should create regular item" time="0.0070" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/rejson-rl ACL Should throw error if no permissions for &quot;json.set&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;json.set&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /sentinel/get-masters" timestamp="2022-06-30T06:43:46" tests="0" file="/usr/src/app/test/api/sentinel/POST-sentinel-get_masters.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:46" tests="74" file="/usr/src/app/test/api/sentinel/POST-sentinel-get_masters.test.ts" time="0.0040" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:46" tests="1" file="/usr/src/app/test/api/sentinel/POST-sentinel-get_masters.test.ts" time="0.0020" failures="0">
  </testsuite>
  <testsuite name="DELETE /instance/:instanceId/set/members" timestamp="2022-06-30T06:43:46" tests="0" file="/usr/src/app/test/api/set/DELETE-instance-id-set-members.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:46" tests="13" file="/usr/src/app/test/api/set/DELETE-instance-id-set-members.test.ts" time="0.0450" failures="0">
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: members = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: members = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: members = &quot;null&quot;" time="0.0030" classname="Validation error when data: members = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: members = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: members = &quot;somestring&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: members = &quot;100&quot;" time="0.0030" classname="Validation error when data: members = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: members = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: members = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Validation Validation error when data: members = &quot;true&quot;" time="0.0030" classname="Validation error when data: members = &quot;true&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:46" tests="5" file="/usr/src/app/test/api/set/DELETE-instance-id-set-members.test.ts" time="0.0390" failures="0">
    <testcase name="DELETE /instance/:instanceId/set/members Common Should delete single member" time="0.0030" classname="Should delete single member">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Common Should delete multiple members" time="0.0030" classname="Should delete multiple members">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Common Should not delete any member if incorrect member passed" time="0.0030" classname="Should not delete any member if incorrect member passed">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:46" tests="3" file="/usr/src/app/test/api/set/DELETE-instance-id-set-members.test.ts" time="0.0130" failures="0">
    <testcase name="DELETE /instance/:instanceId/set/members ACL Should delete member" time="0.0030" classname="Should delete member">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/set/members ACL Should throw error if no permissions for &quot;srem&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;srem&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/set/get-members" timestamp="2022-06-30T06:43:46" tests="0" file="/usr/src/app/test/api/set/POST-instance-id-set-get_members.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:46" tests="24" file="/usr/src/app/test/api/set/POST-instance-id-set-get_members.test.ts" time="0.0920" failures="0">
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: cursor = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: cursor = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: cursor = &quot;null&quot;" time="0.0030" classname="Validation error when data: cursor = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: cursor = &quot;stringvalue&quot;" time="0.0050" classname="Validation error when data: cursor = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: cursor = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: cursor = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: cursor = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: cursor = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: cursor = &quot;11.11&quot;" time="0.0040" classname="Validation error when data: cursor = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: cursor = &quot;-1&quot;" time="0.0040" classname="Validation error when data: cursor = &quot;-1&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: count = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: count = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: count = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: count = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: count = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: count = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: count = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: count = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: count = &quot;0&quot;" time="0.0040" classname="Validation error when data: count = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: match = &quot;100&quot;" time="0.0040" classname="Validation error when data: match = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: match = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: match = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: match = &quot;true&quot;" time="0.0030" classname="Validation error when data: match = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: match = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: match = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Validation Validation error when data: match = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: match = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:46" tests="9" file="/usr/src/app/test/api/set/POST-instance-id-set-get_members.test.ts" time="0.0000" failures="0">
    <testcase name="POST /instance/:instanceId/set/get-members Common Should find by exact match" time="0.0030" classname="Should find by exact match">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Common Should not find any member" time="0.0040" classname="Should not find any member">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Common Should query 15 members" time="0.0040" classname="Should query 15 members">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Common Should query by * in the end" time="0.0040" classname="Should query by * in the end">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Common Should query by * in the beginning" time="0.0040" classname="Should query by * in the beginning">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Common Should query by * in the middle" time="0.0040" classname="Should query by * in the middle">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members Common Should scan entire set" time="0.0040" classname="Should scan entire set">
    </testcase>
  </testsuite>
  <testsuite name="Search in huge number of elements" timestamp="2022-06-30T06:43:46" tests="2" file="/usr/src/app/test/api/set/POST-instance-id-set-get_members.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:46" tests="4" file="/usr/src/app/test/api/set/POST-instance-id-set-get_members.test.ts" time="0.0250" failures="0">
    <testcase name="POST /instance/:instanceId/set/get-members ACL Should add member" time="0.0030" classname="Should add member">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members ACL Should throw error if no permissions for &quot;scard&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;scard&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members ACL Should throw error if no permissions for &quot;sismember&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;sismember&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/set/get-members ACL Should throw error if no permissions for &quot;sscan&quot; command" time="0.0110" classname="Should throw error if no permissions for &quot;sscan&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/set" timestamp="2022-06-30T06:43:46" tests="0" file="/usr/src/app/test/api/set/POST-instance-id-set.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:46" tests="25" file="/usr/src/app/test/api/set/POST-instance-id-set.test.ts" time="0.1140" failures="0">
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0070" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: keyName = &quot;null&quot;" time="0.0070" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: keyName = &quot;100&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: members = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members = &quot;null&quot;" time="0.0030" classname="Validation error when data: members = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: members = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members = &quot;100&quot;" time="0.0040" classname="Validation error when data: members = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: members = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members = &quot;true&quot;" time="0.0030" classname="Validation error when data: members = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;100&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;100.12&quot;" time="0.0050" classname="Validation error when data: members.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;true&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: expire = &quot;stringvalue&quot;" time="0.0040" classname="Validation error when data: expire = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: expire = &quot;true&quot;" time="0.0040" classname="Validation error when data: expire = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: expire = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: expire = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: expire = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: expire = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: expire = &quot;11.11&quot;" time="0.0040" classname="Validation error when data: expire = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: expire = &quot;0&quot;" time="0.0030" classname="Validation error when data: expire = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Validation Validation error when data: expire = &quot;2147483648&quot;" time="0.0030" classname="Validation error when data: expire = &quot;2147483648&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:46" tests="5" file="/usr/src/app/test/api/set/POST-instance-id-set.test.ts" time="0.0200" failures="0">
    <testcase name="POST /instance/:instanceId/set Common Should create item with empty value" time="0.0040" classname="Should create item with empty value">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Common Should create item with key ttl" time="0.0060" classname="Should create item with key ttl">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Common Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Common Should return conflict error if key already exists" time="0.0030" classname="Should return conflict error if key already exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/set Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:46" tests="3" file="/usr/src/app/test/api/set/POST-instance-id-set.test.ts" time="0.0120" failures="0">
    <testcase name="POST /instance/:instanceId/set ACL Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/set ACL Should throw error if no permissions for &quot;sadd&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;sadd&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/set ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PUT /instance/:instanceId/set" timestamp="2022-06-30T06:43:46" tests="0" file="/usr/src/app/test/api/set/PUT-instance-id-set.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:46" tests="19" file="/usr/src/app/test/api/set/PUT-instance-id-set.test.ts" time="0.0700" failures="0">
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: keyName = &quot;100&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: members = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members = &quot;null&quot;" time="0.0030" classname="Validation error when data: members = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members = &quot;somestring&quot;" time="0.0040" classname="Validation error when data: members = &quot;somestring&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members = &quot;100&quot;" time="0.0040" classname="Validation error when data: members = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: members = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members = &quot;true&quot;" time="0.0020" classname="Validation error when data: members = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;null&quot;" time="0.0020" classname="Validation error when data: members.0 = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;100&quot;" time="0.0040" classname="Validation error when data: members.0 = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;true&quot;" time="0.0020" classname="Validation error when data: members.0 = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: members.0 = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Validation Validation error when data: members.0 = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: members.0 = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:46" tests="5" file="/usr/src/app/test/api/set/PUT-instance-id-set.test.ts" time="0.0390" failures="0">
    <testcase name="PUT /instance/:instanceId/set Common Should not modify set as such member already exists" time="0.0040" classname="Should not modify set as such member already exists">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Common Should add single member" time="0.0030" classname="Should add single member">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Common Should add multiple members" time="0.0030" classname="Should add multiple members">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:46" tests="3" file="/usr/src/app/test/api/set/PUT-instance-id-set.test.ts" time="0.0140" failures="0">
    <testcase name="PUT /instance/:instanceId/set ACL Should add member" time="0.0030" classname="Should add member">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="PUT /instance/:instanceId/set ACL Should throw error if no permissions for &quot;sadd&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;sadd&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="GET /settings/agreements/spec" timestamp="2022-06-30T06:43:46" tests="1" file="/usr/src/app/test/api/settings/GET-settings-agreements-spec.test.ts" time="0.0050" failures="0">
    <testcase name="GET /settings/agreements/spec Should return valid JSON" time="0.0050" classname="Should return valid JSON">
    </testcase>
  </testsuite>
  <testsuite name="GET /settings" timestamp="2022-06-30T06:43:46" tests="2" file="/usr/src/app/test/api/settings/GET-settings.test.ts" time="0.0690" failures="0">
    <testcase name="GET /settings Should return default settings" time="0.0230" classname="Should return default settings">
    </testcase>
    <testcase name="GET /settings Should return settings with applied EULA agreement" time="0.0420" classname="Should return settings with applied EULA agreement">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /settings" timestamp="2022-06-30T06:43:46" tests="0" file="/usr/src/app/test/api/settings/PATCH-settings.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:46" tests="26" file="/usr/src/app/test/api/settings/PATCH-settings.test.ts" time="0.0730" failures="0">
    <testcase name="PATCH /settings Validation Validation error when data: theme = &quot;100&quot;" time="0.0030" classname="Validation error when data: theme = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: theme = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: theme = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: theme = &quot;true&quot;" time="0.0020" classname="Validation error when data: theme = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: theme = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: theme = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: theme = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: theme = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: scanThreshold = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: scanThreshold = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: scanThreshold = &quot;true&quot;" time="0.0030" classname="Validation error when data: scanThreshold = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: scanThreshold = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: scanThreshold = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: scanThreshold = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: scanThreshold = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: scanThreshold = &quot;499&quot;" time="0.0020" classname="Validation error when data: scanThreshold = &quot;499&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: agreements = &quot;somestring&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements = &quot;100&quot;" time="0.0020" classname="Validation error when data: agreements = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: agreements = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements = &quot;true&quot;" time="0.0030" classname="Validation error when data: agreements = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.eula = &quot;null&quot;" time="0.0020" classname="Validation error when data: agreements.eula = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.eula = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: agreements.eula = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.eula = &quot;100&quot;" time="0.0020" classname="Validation error when data: agreements.eula = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.eula = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: agreements.eula = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.eula = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: agreements.eula = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.eula = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: agreements.eula = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.encryption = &quot;null&quot;" time="0.0030" classname="Validation error when data: agreements.encryption = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.encryption = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: agreements.encryption = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.encryption = &quot;100&quot;" time="0.0030" classname="Validation error when data: agreements.encryption = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.encryption = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: agreements.encryption = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.encryption = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: agreements.encryption = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /settings Validation Validation error when data: agreements.encryption = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: agreements.encryption = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="settings" timestamp="2022-06-30T06:43:46" tests="3" file="/usr/src/app/test/api/settings/PATCH-settings.test.ts" time="0.1220" failures="0">
    <testcase name="PATCH /settings settings Should update only scanThreshold value" time="0.0250" classname="Should update only scanThreshold value">
    </testcase>
    <testcase name="PATCH /settings settings Should update settings and agreements" time="0.0460" classname="Should update settings and agreements">
    </testcase>
    <testcase name="PATCH /settings settings Should set default settings" time="0.0260" classname="Should set default settings">
    </testcase>
  </testsuite>
  <testsuite name="agreements" timestamp="2022-06-30T06:43:46" tests="3" file="/usr/src/app/test/api/settings/PATCH-settings.test.ts" time="0.1150" failures="0">
    <testcase name="PATCH /settings agreements Should throw [Bad Request] if some agreements are missed in dto" time="0.0080" classname="Should throw [Bad Request] if some agreements are missed in dto">
    </testcase>
    <testcase name="PATCH /settings agreements Should accept all agreements defined in specification" time="0.0250" classname="Should accept all agreements defined in specification">
    </testcase>
    <testcase name="PATCH /settings agreements Should reject analytics agreement" time="0.0240" classname="Should reject analytics agreement">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /instance/:instanceId/slow-logs" timestamp="2022-06-30T06:43:47" tests="0" file="/usr/src/app/test/api/slowlog/DELETE-instance-id-slow_logs.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:47" tests="2" file="/usr/src/app/test/api/slowlog/DELETE-instance-id-slow_logs.test.ts" time="0.0070" failures="0">
    <testcase name="DELETE /instance/:instanceId/slow-logs Common Check that slowlog cleaned up" time="0.0030" classname="Check that slowlog cleaned up">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/slow-logs Common Should return 404 not found when incorrect instance" time="0.0030" classname="Should return 404 not found when incorrect instance">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:47" tests="2" file="/usr/src/app/test/api/slowlog/DELETE-instance-id-slow_logs.test.ts" time="0.0070" failures="0">
    <testcase name="DELETE /instance/:instanceId/slow-logs ACL Should reset slowlog" time="0.0020" classname="Should reset slowlog">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/slow-logs ACL Should throw error if no permissions for &quot;slowlog&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;slowlog&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="GET /instance/:instanceId/slow-logs/config" timestamp="2022-06-30T06:43:47" tests="0" file="/usr/src/app/test/api/slowlog/GET-instance-id-slow_logs-config.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:47" tests="2" file="/usr/src/app/test/api/slowlog/GET-instance-id-slow_logs-config.test.ts" time="0.0060" failures="0">
    <testcase name="GET /instance/:instanceId/slow-logs/config Common Should get slowlog config" time="0.0020" classname="Should get slowlog config">
    </testcase>
    <testcase name="GET /instance/:instanceId/slow-logs/config Common Should return 404 not found when incorrect instance" time="0.0030" classname="Should return 404 not found when incorrect instance">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:47" tests="2" file="/usr/src/app/test/api/slowlog/GET-instance-id-slow_logs-config.test.ts" time="0.0040" failures="0">
    <testcase name="GET /instance/:instanceId/slow-logs/config ACL Should get slowlog config" time="0.0020" classname="Should get slowlog config">
    </testcase>
    <testcase name="GET /instance/:instanceId/slow-logs/config ACL Should throw error if no permissions for &quot;config&quot; command" time="0.0020" classname="Should throw error if no permissions for &quot;config&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="GET /instance/:instanceId/slow-logs" timestamp="2022-06-30T06:43:47" tests="0" file="/usr/src/app/test/api/slowlog/GET-instance-id-slow_logs.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:47" tests="4" file="/usr/src/app/test/api/slowlog/GET-instance-id-slow_logs.test.ts" time="0.0210" failures="0">
    <testcase name="GET /instance/:instanceId/slow-logs Common Should return 0 array when slowlog-log-slower-than is a huge value" time="0.0030" classname="Should return 0 array when slowlog-log-slower-than is a huge value">
    </testcase>
    <testcase name="GET /instance/:instanceId/slow-logs Common Should return 1 + slave nodes array when slowlog-log-slower-than is a huge value" time="0.0040" classname="Should return 1 + slave nodes array when slowlog-log-slower-than is a huge value">
    </testcase>
    <testcase name="GET /instance/:instanceId/slow-logs Common Should get slow logs including &quot;set&quot; command inside" time="0.0060" classname="Should get slow logs including &quot;set&quot; command inside">
    </testcase>
    <testcase name="GET /instance/:instanceId/slow-logs Common Should return 404 not found when incorrect instance" time="0.0040" classname="Should return 404 not found when incorrect instance">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:47" tests="2" file="/usr/src/app/test/api/slowlog/GET-instance-id-slow_logs.test.ts" time="0.0060" failures="0">
    <testcase name="GET /instance/:instanceId/slow-logs ACL Should fetch slowlog" time="0.0020" classname="Should fetch slowlog">
    </testcase>
    <testcase name="GET /instance/:instanceId/slow-logs ACL Should throw error if no permissions for &quot;slowlog&quot; command" time="0.0020" classname="Should throw error if no permissions for &quot;slowlog&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /instance/:instanceId/slow-logs/config" timestamp="2022-06-30T06:43:47" tests="0" file="/usr/src/app/test/api/slowlog/PATCH-instance-id-slow_logs-config.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:47" tests="12" file="/usr/src/app/test/api/slowlog/PATCH-instance-id-slow_logs-config.test.ts" time="0.0350" failures="0">
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogMaxLen = &quot;null&quot;" time="0.0030" classname="Validation error when data: slowlogMaxLen = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogMaxLen = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: slowlogMaxLen = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogMaxLen = &quot;true&quot;" time="0.0030" classname="Validation error when data: slowlogMaxLen = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogMaxLen = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: slowlogMaxLen = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogMaxLen = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: slowlogMaxLen = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogMaxLen = &quot;-1&quot;" time="0.0020" classname="Validation error when data: slowlogMaxLen = &quot;-1&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogLogSlowerThan = &quot;null&quot;" time="0.0020" classname="Validation error when data: slowlogLogSlowerThan = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogLogSlowerThan = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: slowlogLogSlowerThan = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogLogSlowerThan = &quot;true&quot;" time="0.0020" classname="Validation error when data: slowlogLogSlowerThan = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogLogSlowerThan = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: slowlogLogSlowerThan = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogLogSlowerThan = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: slowlogLogSlowerThan = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Validation Validation error when data: slowlogLogSlowerThan = &quot;-2&quot;" time="0.0020" classname="Validation error when data: slowlogLogSlowerThan = &quot;-2&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Standalone" timestamp="2022-06-30T06:43:47" tests="0" file="/usr/src/app/test/api/slowlog/PATCH-instance-id-slow_logs-config.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:47" tests="5" file="/usr/src/app/test/api/slowlog/PATCH-instance-id-slow_logs-config.test.ts" time="0.0180" failures="0">
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Standalone Common Should NOT change anything" time="0.0020" classname="Should NOT change anything">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Standalone Common Should change only slowlog-max-len" time="0.0030" classname="Should change only slowlog-max-len">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Standalone Common Should change only slowlog-log-slower-than" time="0.0040" classname="Should change only slowlog-log-slower-than">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Standalone Common Should change both" time="0.0030" classname="Should change both">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Standalone Common Should return 404 not found when incorrect instance" time="0.0030" classname="Should return 404 not found when incorrect instance">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:47" tests="2" file="/usr/src/app/test/api/slowlog/PATCH-instance-id-slow_logs-config.test.ts" time="0.0060" failures="0">
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Standalone ACL Should get slowlog config" time="0.0020" classname="Should get slowlog config">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/slow-logs/config Standalone ACL Should throw error if no permissions for &quot;config&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;config&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="Cluster" timestamp="2022-06-30T06:43:47" tests="2" file="/usr/src/app/test/api/slowlog/PATCH-instance-id-slow_logs-config.test.ts" time="0.0010" failures="0">
  </testsuite>
  <testsuite name="DELETE /instance/:instanceId/streams/consumer-groups/consumers" timestamp="2022-06-30T06:43:47" tests="0" file="/usr/src/app/test/api/stream/DELETE-instance-id-streams-consumer_groups-consumers.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:47" tests="27" file="/usr/src/app/test/api/stream/DELETE-instance-id-streams-consumer_groups-consumers.test.ts" time="0.1310" failures="0">
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: keyName = &quot;null&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: groupName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: groupName = &quot;null&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: groupName = &quot;100&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: groupName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: groupName = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: groupName = &quot;true&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: groupName = &quot;[object Object]&quot;" time="0.0050" classname="Validation error when data: groupName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: groupName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: groupName = &quot;some,array&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: consumerNames = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames = &quot;null&quot;" time="0.0060" classname="Validation error when data: consumerNames = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames = &quot;somestring&quot;" time="0.0050" classname="Validation error when data: consumerNames = &quot;somestring&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames = &quot;100&quot;" time="0.0060" classname="Validation error when data: consumerNames = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames = &quot;100.12&quot;" time="0.0050" classname="Validation error when data: consumerNames = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames = &quot;true&quot;" time="0.0050" classname="Validation error when data: consumerNames = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames.0 = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: consumerNames.0 = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames.0 = &quot;null&quot;" time="0.0040" classname="Validation error when data: consumerNames.0 = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames.0 = &quot;100&quot;" time="0.0060" classname="Validation error when data: consumerNames.0 = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames.0 = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: consumerNames.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames.0 = &quot;true&quot;" time="0.0030" classname="Validation error when data: consumerNames.0 = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames.0 = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: consumerNames.0 = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Validation Validation error when data: consumerNames.0 = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: consumerNames.0 = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:47" tests="7" file="/usr/src/app/test/api/stream/DELETE-instance-id-streams-consumer_groups-consumers.test.ts" time="0.0370" failures="0">
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Common Should remove single consumer" time="0.0050" classname="Should remove single consumer">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Common Should remove multiple consumers" time="0.0040" classname="Should remove multiple consumers">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Common Should remove single consumers and skip not existing consumers" time="0.0050" classname="Should remove single consumers and skip not existing consumers">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Common Should return BadRequest error if key has another type" time="0.0060" classname="Should return BadRequest error if key has another type">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Common Should return NotFound error if group does not exists" time="0.0060" classname="Should return NotFound error if group does not exists">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:47" tests="3" file="/usr/src/app/test/api/stream/DELETE-instance-id-streams-consumer_groups-consumers.test.ts" time="0.0430" failures="0">
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers ACL Should create consumer group" time="0.0040" classname="Should create consumer group">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups/consumers ACL Should throw error if no permissions for &quot;xgroup)&quot; command" time="0.0100" classname="Should throw error if no permissions for &quot;xgroup)&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /instance/:instanceId/streams/consumer-groups" timestamp="2022-06-30T06:43:47" tests="0" file="/usr/src/app/test/api/stream/DELETE-instance-id-streams-consumer_groups.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:47" tests="20" file="/usr/src/app/test/api/stream/DELETE-instance-id-streams-consumer_groups.test.ts" time="0.4740" failures="0">
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;null&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: consumerGroups = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;null&quot;" time="0.0050" classname="Validation error when data: consumerGroups = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;somestring&quot;" time="0.0040" classname="Validation error when data: consumerGroups = &quot;somestring&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;100&quot;" time="0.0040" classname="Validation error when data: consumerGroups = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: consumerGroups = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;true&quot;" time="0.0050" classname="Validation error when data: consumerGroups = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: consumerGroups.0 = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;null&quot;" time="0.0030" classname="Validation error when data: consumerGroups.0 = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;100&quot;" time="0.0030" classname="Validation error when data: consumerGroups.0 = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: consumerGroups.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;true&quot;" time="0.0040" classname="Validation error when data: consumerGroups.0 = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: consumerGroups.0 = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: consumerGroups.0 = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:47" tests="6" file="/usr/src/app/test/api/stream/DELETE-instance-id-streams-consumer_groups.test.ts" time="0.1240" failures="0">
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Common Should delete consumer group" time="0.0040" classname="Should delete consumer group">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Common Should delete multiple consumer group" time="0.0050" classname="Should delete multiple consumer group">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Common Should delete single consumer group and ignore not existing" time="0.0040" classname="Should delete single consumer group and ignore not existing">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Common Should return BadRequest error if key has another type" time="0.0030" classname="Should return BadRequest error if key has another type">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:48" tests="3" file="/usr/src/app/test/api/stream/DELETE-instance-id-streams-consumer_groups.test.ts" time="0.1450" failures="0">
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups ACL Should remove consumer group" time="0.0040" classname="Should remove consumer group">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/streams/consumer-groups ACL Should throw error if no permissions for &quot;xgroup&quot; command" time="0.0080" classname="Should throw error if no permissions for &quot;xgroup&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /instance/:instanceId/streams/consumer-groups" timestamp="2022-06-30T06:43:48" tests="0" file="/usr/src/app/test/api/stream/PATCH-instance-id-streams-consumer_groups.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:48" tests="21" file="/usr/src/app/test/api/stream/PATCH-instance-id-streams-consumer_groups.test.ts" time="0.0830" failures="0">
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: name = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: name = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: name = &quot;null&quot;" time="0.0030" classname="Validation error when data: name = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: name = &quot;100&quot;" time="0.0030" classname="Validation error when data: name = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: name = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: name = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: name = &quot;true&quot;" time="0.0030" classname="Validation error when data: name = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: name = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: name = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: name = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: name = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: lastDeliveredId = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: lastDeliveredId = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: lastDeliveredId = &quot;null&quot;" time="0.0030" classname="Validation error when data: lastDeliveredId = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: lastDeliveredId = &quot;100&quot;" time="0.0040" classname="Validation error when data: lastDeliveredId = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: lastDeliveredId = &quot;100.12&quot;" time="0.0050" classname="Validation error when data: lastDeliveredId = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: lastDeliveredId = &quot;true&quot;" time="0.0030" classname="Validation error when data: lastDeliveredId = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: lastDeliveredId = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: lastDeliveredId = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Validation Validation error when data: lastDeliveredId = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: lastDeliveredId = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:48" tests="5" file="/usr/src/app/test/api/stream/PATCH-instance-id-streams-consumer_groups.test.ts" time="0.0210" failures="0">
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Common Should update lastDeliveredId" time="0.0050" classname="Should update lastDeliveredId">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Common Should return BadRequest error if key has another type" time="0.0030" classname="Should return BadRequest error if key has another type">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Common Should return NotFound error if key does not exists" time="0.0020" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Common Should return NotFound error if group does not exists" time="0.0040" classname="Should return NotFound error if group does not exists">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:48" tests="3" file="/usr/src/app/test/api/stream/PATCH-instance-id-streams-consumer_groups.test.ts" time="0.0350" failures="0">
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups ACL Should create consumer group" time="0.0020" classname="Should create consumer group">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/streams/consumer-groups ACL Should throw error if no permissions for &quot;xgroup&quot; command" time="0.0060" classname="Should throw error if no permissions for &quot;xgroup&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/streams/consumer-groups/consumers/get" timestamp="2022-06-30T06:43:48" tests="0" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-get.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:48" tests="14" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-get.test.ts" time="0.0650" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: keyName = &quot;null&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: keyName = &quot;true&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: groupName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: groupName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: groupName = &quot;null&quot;" time="0.0050" classname="Validation error when data: groupName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: groupName = &quot;100&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: groupName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: groupName = &quot;true&quot;" time="0.0030" classname="Validation error when data: groupName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: groupName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Validation Validation error when data: groupName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: groupName = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:48" tests="6" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-get.test.ts" time="0.0250" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Common Should return empty array when no consumers" time="0.0040" classname="Should return empty array when no consumers">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Common Should return consumers list" time="0.0040" classname="Should return consumers list">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Common Should return BadRequest error if key has another type" time="0.0040" classname="Should return BadRequest error if key has another type">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Common Should return NotFound error if group does not exists" time="0.0040" classname="Should return NotFound error if group does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:48" tests="3" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-get.test.ts" time="0.0390" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get ACL Should create consumer group" time="0.0050" classname="Should create consumer group">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/get ACL Should throw error if no permissions for &quot;xinfo&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;xinfo&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack" timestamp="2022-06-30T06:43:48" tests="0" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-ack.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:48" tests="27" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-ack.test.ts" time="0.3320" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: keyName = &quot;null&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: groupName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: groupName = &quot;null&quot;" time="0.0050" classname="Validation error when data: groupName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: groupName = &quot;100&quot;" time="0.0030" classname="Validation error when data: groupName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: groupName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: groupName = &quot;true&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: groupName = &quot;[object Object]&quot;" time="0.0050" classname="Validation error when data: groupName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: groupName = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: groupName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: entries = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries = &quot;null&quot;" time="0.0050" classname="Validation error when data: entries = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries = &quot;somestring&quot;" time="0.0040" classname="Validation error when data: entries = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries = &quot;100&quot;" time="0.0040" classname="Validation error when data: entries = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: entries = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries = &quot;true&quot;" time="0.0070" classname="Validation error when data: entries = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries.0 = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: entries.0 = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries.0 = &quot;null&quot;" time="0.0040" classname="Validation error when data: entries.0 = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries.0 = &quot;100&quot;" time="0.0030" classname="Validation error when data: entries.0 = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries.0 = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: entries.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries.0 = &quot;true&quot;" time="0.0040" classname="Validation error when data: entries.0 = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries.0 = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: entries.0 = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Validation Validation error when data: entries.0 = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: entries.0 = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:48" tests="6" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-ack.test.ts" time="0.0850" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Common Should ack single entry" time="0.0050" classname="Should ack single entry">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Common Should ack single entry and ignore not existing" time="0.0040" classname="Should ack single entry and ignore not existing">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Common Should return affected:0 if group does not exists" time="0.0040" classname="Should return affected:0 if group does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Common Should return BadRequest error if key has another type" time="0.0070" classname="Should return BadRequest error if key has another type">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Common Should return NotFound error if key does not exists" time="0.0090" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:48" tests="3" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-ack.test.ts" time="0.0600" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack ACL Should create consumer group" time="0.0050" classname="Should create consumer group">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/ack ACL Should throw error if no permissions for &quot;xack&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;xack&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim" timestamp="2022-06-30T06:43:48" tests="0" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-claim.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:48" tests="60" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-claim.test.ts" time="0.7130" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0110" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: keyName = &quot;true&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: groupName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: groupName = &quot;null&quot;" time="0.0050" classname="Validation error when data: groupName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: groupName = &quot;100&quot;" time="0.0050" classname="Validation error when data: groupName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: groupName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: groupName = &quot;true&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: groupName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: groupName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: groupName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: consumerName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: consumerName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: consumerName = &quot;null&quot;" time="0.0040" classname="Validation error when data: consumerName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: consumerName = &quot;100&quot;" time="0.0030" classname="Validation error when data: consumerName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: consumerName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: consumerName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: consumerName = &quot;true&quot;" time="0.0050" classname="Validation error when data: consumerName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: consumerName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: consumerName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: consumerName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: consumerName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries = &quot;undefined&quot;" time="0.0060" classname="Validation error when data: entries = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries = &quot;null&quot;" time="0.0030" classname="Validation error when data: entries = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries = &quot;somestring&quot;" time="0.0040" classname="Validation error when data: entries = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries = &quot;100&quot;" time="0.0040" classname="Validation error when data: entries = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: entries = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries = &quot;true&quot;" time="0.0030" classname="Validation error when data: entries = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries.0 = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: entries.0 = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries.0 = &quot;null&quot;" time="0.0040" classname="Validation error when data: entries.0 = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries.0 = &quot;100&quot;" time="0.0060" classname="Validation error when data: entries.0 = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries.0 = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: entries.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries.0 = &quot;true&quot;" time="0.0050" classname="Validation error when data: entries.0 = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries.0 = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: entries.0 = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: entries.0 = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: entries.0 = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: minIdleTime = &quot;null&quot;" time="0.0040" classname="Validation error when data: minIdleTime = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: minIdleTime = &quot;stringvalue&quot;" time="0.0040" classname="Validation error when data: minIdleTime = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: minIdleTime = &quot;true&quot;" time="0.0030" classname="Validation error when data: minIdleTime = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: minIdleTime = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: minIdleTime = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: minIdleTime = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: minIdleTime = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: minIdleTime = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: minIdleTime = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: minIdleTime = &quot;-1&quot;" time="0.0040" classname="Validation error when data: minIdleTime = &quot;-1&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: time = &quot;null&quot;" time="0.0050" classname="Validation error when data: time = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: time = &quot;stringvalue&quot;" time="0.0040" classname="Validation error when data: time = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: time = &quot;true&quot;" time="0.0040" classname="Validation error when data: time = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: time = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: time = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: time = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: time = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: time = &quot;11.11&quot;" time="0.0040" classname="Validation error when data: time = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: retryCount = &quot;null&quot;" time="0.0030" classname="Validation error when data: retryCount = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: retryCount = &quot;stringvalue&quot;" time="0.0040" classname="Validation error when data: retryCount = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: retryCount = &quot;true&quot;" time="0.0040" classname="Validation error when data: retryCount = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: retryCount = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: retryCount = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: retryCount = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: retryCount = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: retryCount = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: retryCount = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: retryCount = &quot;-1&quot;" time="0.0060" classname="Validation error when data: retryCount = &quot;-1&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: force = &quot;null&quot;" time="0.0040" classname="Validation error when data: force = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: force = &quot;stringvalue&quot;" time="0.0040" classname="Validation error when data: force = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: force = &quot;100&quot;" time="0.0060" classname="Validation error when data: force = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: force = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: force = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: force = &quot;[object Object]&quot;" time="0.0060" classname="Validation error when data: force = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Validation Validation error when data: force = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: force = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:49" tests="7" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-claim.test.ts" time="0.0850" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Common Should claim single entry" time="0.0060" classname="Should claim single entry">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Common Should claim multiple entries" time="0.0050" classname="Should claim multiple entries">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Common Should claim multiple entries out of known consumer" time="0.0050" classname="Should claim multiple entries out of known consumer">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Common Should return BadRequest error if key has another type" time="0.0040" classname="Should return BadRequest error if key has another type">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Common Should return NotFound error if group does not exists" time="0.0030" classname="Should return NotFound error if group does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:49" tests="3" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-claim.test.ts" time="0.0560" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim ACL Should create consumer group" time="0.0040" classname="Should create consumer group">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/claim ACL Should throw error if no permissions for &quot;xclaim&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;xclaim&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get" timestamp="2022-06-30T06:43:49" tests="0" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-get.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:49" tests="38" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-get.test.ts" time="0.4480" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: keyName = &quot;100&quot;" time="0.0070" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: groupName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: groupName = &quot;null&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: groupName = &quot;100&quot;" time="0.0030" classname="Validation error when data: groupName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: groupName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: groupName = &quot;true&quot;" time="0.0060" classname="Validation error when data: groupName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: groupName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: groupName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: groupName = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: groupName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: consumerName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: consumerName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: consumerName = &quot;null&quot;" time="0.0030" classname="Validation error when data: consumerName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: consumerName = &quot;100&quot;" time="0.0040" classname="Validation error when data: consumerName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: consumerName = &quot;100.12&quot;" time="0.0060" classname="Validation error when data: consumerName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: consumerName = &quot;true&quot;" time="0.0060" classname="Validation error when data: consumerName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: consumerName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: consumerName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: consumerName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: consumerName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: count = &quot;null&quot;" time="0.0030" classname="Validation error when data: count = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: count = &quot;stringvalue&quot;" time="0.0040" classname="Validation error when data: count = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: count = &quot;true&quot;" time="0.0050" classname="Validation error when data: count = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: count = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: count = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: count = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: count = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: start = &quot;null&quot;" time="0.0040" classname="Validation error when data: start = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: start = &quot;100&quot;" time="0.0040" classname="Validation error when data: start = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: start = &quot;100.12&quot;" time="0.0060" classname="Validation error when data: start = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: start = &quot;true&quot;" time="0.0050" classname="Validation error when data: start = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: start = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: start = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: start = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: start = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: end = &quot;null&quot;" time="0.0030" classname="Validation error when data: end = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: end = &quot;100&quot;" time="0.0030" classname="Validation error when data: end = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: end = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: end = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: end = &quot;true&quot;" time="0.0030" classname="Validation error when data: end = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: end = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: end = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Validation Validation error when data: end = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: end = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:50" tests="11" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-get.test.ts" time="0.1270" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return empty array when no pending messages" time="0.0050" classname="Should return empty array when no pending messages">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return pending messages list with only 1 message" time="0.0040" classname="Should return pending messages list with only 1 message">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return pending messages list (2 messages)" time="0.0030" classname="Should return pending messages list (2 messages)">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return pending messages list (0 messages) filtered by end" time="0.0050" classname="Should return pending messages list (0 messages) filtered by end">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return pending messages list (1 messages) filtered by end" time="0.0040" classname="Should return pending messages list (1 messages) filtered by end">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return pending messages list (0 messages) filtered by start" time="0.0040" classname="Should return pending messages list (0 messages) filtered by start">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return pending messages list (1 messages) filtered by start" time="0.0040" classname="Should return pending messages list (1 messages) filtered by start">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return BadRequest error if key has another type" time="0.0030" classname="Should return BadRequest error if key has another type">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return NotFound error if group does not exists" time="0.0040" classname="Should return NotFound error if group does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:50" tests="3" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-consumers-pending_messages-get.test.ts" time="0.0550" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get ACL Should create consumer group" time="0.0030" classname="Should create consumer group">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/consumers/pending-messages/get ACL Should throw error if no permissions for &quot;xpending&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;xpending&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/streams/consumer-groups/get" timestamp="2022-06-30T06:43:50" tests="0" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-get.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:50" tests="7" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-get.test.ts" time="0.0530" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Validation Validation error when data: keyName = &quot;100&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Validation Validation error when data: keyName = &quot;true&quot;" time="0.0120" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0180" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:50" tests="5" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-get.test.ts" time="0.0220" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Common Should return empty array when no consumer groups" time="0.0050" classname="Should return empty array when no consumer groups">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Common Should return groups list" time="0.0050" classname="Should return groups list">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Common Should return BadRequest error if key has another type" time="0.0030" classname="Should return BadRequest error if key has another type">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get Common Should return NotFound error if instance id does not exists" time="0.0040" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:50" tests="4" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups-get.test.ts" time="0.0420" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get ACL Should create consumer group" time="0.0030" classname="Should create consumer group">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get ACL Should throw error if no permissions for &quot;xpending&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;xpending&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups/get ACL Should throw error if no permissions for &quot;xinfo&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;xinfo&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/streams/consumer-groups" timestamp="2022-06-30T06:43:50" tests="0" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:50" tests="32" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups.test.ts" time="0.1510" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;true&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: consumerGroups = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;null&quot;" time="0.0050" classname="Validation error when data: consumerGroups = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: consumerGroups = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;100&quot;" time="0.0040" classname="Validation error when data: consumerGroups = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;100.12&quot;" time="0.0080" classname="Validation error when data: consumerGroups = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups = &quot;true&quot;" time="0.0060" classname="Validation error when data: consumerGroups = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;null&quot;" time="0.0060" classname="Validation error when data: consumerGroups.0 = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;somestring&quot;" time="0.0050" classname="Validation error when data: consumerGroups.0 = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;100&quot;" time="0.0050" classname="Validation error when data: consumerGroups.0 = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;100.12&quot;" time="0.0050" classname="Validation error when data: consumerGroups.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0 = &quot;true&quot;" time="0.0050" classname="Validation error when data: consumerGroups.0 = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.name = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: consumerGroups.0.name = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.name = &quot;null&quot;" time="0.0070" classname="Validation error when data: consumerGroups.0.name = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.name = &quot;100&quot;" time="0.0040" classname="Validation error when data: consumerGroups.0.name = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.name = &quot;100.12&quot;" time="0.0060" classname="Validation error when data: consumerGroups.0.name = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.name = &quot;true&quot;" time="0.0040" classname="Validation error when data: consumerGroups.0.name = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.name = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: consumerGroups.0.name = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.name = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: consumerGroups.0.name = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.lastDeliveredId = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: consumerGroups.0.lastDeliveredId = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.lastDeliveredId = &quot;null&quot;" time="0.0040" classname="Validation error when data: consumerGroups.0.lastDeliveredId = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.lastDeliveredId = &quot;100&quot;" time="0.0040" classname="Validation error when data: consumerGroups.0.lastDeliveredId = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.lastDeliveredId = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: consumerGroups.0.lastDeliveredId = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.lastDeliveredId = &quot;true&quot;" time="0.0030" classname="Validation error when data: consumerGroups.0.lastDeliveredId = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.lastDeliveredId = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: consumerGroups.0.lastDeliveredId = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Validation Validation error when data: consumerGroups.0.lastDeliveredId = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: consumerGroups.0.lastDeliveredId = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:50" tests="6" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups.test.ts" time="0.0250" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Common Should create single consumer group" time="0.0040" classname="Should create single consumer group">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Common Should create multiple consumer groups" time="0.0030" classname="Should create multiple consumer groups">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Common Should return 409 Conflict error when group exists" time="0.0040" classname="Should return 409 Conflict error when group exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Common Should return BadRequest error if key has another type" time="0.0040" classname="Should return BadRequest error if key has another type">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:50" tests="3" file="/usr/src/app/test/api/stream/POST-instance-id-streams-consumer_groups.test.ts" time="0.0360" failures="0">
    <testcase name="POST /instance/:instanceId/streams/consumer-groups ACL Should create consumer group" time="0.0040" classname="Should create consumer group">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/consumer-groups ACL Should throw error if no permissions for &quot;xgroup&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;xgroup&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/streams/entries/get" timestamp="2022-06-30T06:43:50" tests="0" file="/usr/src/app/test/api/stream/POST-instance-id-streams-entries-get.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:51" tests="31" file="/usr/src/app/test/api/stream/POST-instance-id-streams-entries-get.test.ts" time="0.1070" failures="0">
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: keyName = &quot;null&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: keyName = &quot;100&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: start = &quot;null&quot;" time="0.0030" classname="Validation error when data: start = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: start = &quot;100&quot;" time="0.0030" classname="Validation error when data: start = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: start = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: start = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: start = &quot;true&quot;" time="0.0030" classname="Validation error when data: start = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: start = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: start = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: start = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: start = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: end = &quot;null&quot;" time="0.0030" classname="Validation error when data: end = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: end = &quot;100&quot;" time="0.0030" classname="Validation error when data: end = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: end = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: end = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: end = &quot;true&quot;" time="0.0030" classname="Validation error when data: end = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: end = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: end = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: end = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: end = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: count = &quot;null&quot;" time="0.0020" classname="Validation error when data: count = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: count = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: count = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: count = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: count = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: count = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: count = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: count = &quot;11.11&quot;" time="0.0020" classname="Validation error when data: count = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: count = &quot;0&quot;" time="0.0020" classname="Validation error when data: count = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: sortOrder = &quot;null&quot;" time="0.0020" classname="Validation error when data: sortOrder = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: sortOrder = &quot;100&quot;" time="0.0020" classname="Validation error when data: sortOrder = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: sortOrder = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: sortOrder = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: sortOrder = &quot;true&quot;" time="0.0040" classname="Validation error when data: sortOrder = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: sortOrder = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: sortOrder = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Validation Validation error when data: sortOrder = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: sortOrder = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:51" tests="8" file="/usr/src/app/test/api/stream/POST-instance-id-streams-entries-get.test.ts" time="0.0810" failures="0">
    <testcase name="POST /instance/:instanceId/streams/entries/get Common Should query 500 entries in the DESC order by default" time="0.0310" classname="Should query 500 entries in the DESC order by default">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Common Should query 10 entries in the DESC order starting from 100th entry" time="0.0050" classname="Should query 10 entries in the DESC order starting from 100th entry">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Common Should query 500 entries in the ASC order" time="0.0230" classname="Should query 500 entries in the ASC order">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Common Should query 10 entries in the ASC order starting from 100th entry" time="0.0060" classname="Should query 10 entries in the ASC order starting from 100th entry">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Common Should return BadRequest when try to work with non-stream type" time="0.0040" classname="Should return BadRequest when try to work with non-stream type">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Common Should return bad request" time="0.0030" classname="Should return bad request">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get Common Should return NotFound error if instance id does not exists" time="0.0010" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:51" tests="4" file="/usr/src/app/test/api/stream/POST-instance-id-streams-entries-get.test.ts" time="0.0200" failures="0">
    <testcase name="POST /instance/:instanceId/streams/entries/get ACL Should remove all members and key" time="0.0040" classname="Should remove all members and key">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get ACL Should throw error if no permissions for &quot;xinfo&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;xinfo&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get ACL Should throw error if no permissions for &quot;xrange&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;xrange&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries/get ACL Should throw error if no permissions for &quot;xrevrange&quot; command" time="0.0070" classname="Should throw error if no permissions for &quot;xrevrange&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/streams/entries" timestamp="2022-06-30T06:43:51" tests="0" file="/usr/src/app/test/api/stream/POST-instance-id-streams-entries.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:51" tests="31" file="/usr/src/app/test/api/stream/POST-instance-id-streams-entries.test.ts" time="0.1030" failures="0">
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries = &quot;undefined&quot;" time="0.0020" classname="Validation error when data: entries = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries = &quot;null&quot;" time="0.0030" classname="Validation error when data: entries = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries = &quot;somestring&quot;" time="0.0020" classname="Validation error when data: entries = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries = &quot;100&quot;" time="0.0020" classname="Validation error when data: entries = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: entries = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries = &quot;true&quot;" time="0.0030" classname="Validation error when data: entries = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0 = &quot;null&quot;" time="0.0040" classname="Validation error when data: entries.0 = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0 = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: entries.0 = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0 = &quot;100&quot;" time="0.0030" classname="Validation error when data: entries.0 = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0 = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: entries.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0 = &quot;true&quot;" time="0.0030" classname="Validation error when data: entries.0 = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.id = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.id = &quot;null&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.id = &quot;100&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.id = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.id = &quot;true&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.id = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.id = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: entries.0.id = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.fields = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: entries.0.fields = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.fields = &quot;null&quot;" time="0.0040" classname="Validation error when data: entries.0.fields = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.fields = &quot;somestring&quot;" time="0.0020" classname="Validation error when data: entries.0.fields = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.fields = &quot;100&quot;" time="0.0030" classname="Validation error when data: entries.0.fields = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.fields = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: entries.0.fields = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Validation Validation error when data: entries.0.fields = &quot;true&quot;" time="0.0030" classname="Validation error when data: entries.0.fields = &quot;true&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:51" tests="5" file="/usr/src/app/test/api/stream/POST-instance-id-streams-entries.test.ts" time="0.0250" failures="0">
    <testcase name="POST /instance/:instanceId/streams/entries Common Should add entry" time="0.0080" classname="Should add entry">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Common Should add multiple entries and multiple fields" time="0.0050" classname="Should add multiple entries and multiple fields">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Common Should return BadRequest when try to work with non-stream type" time="0.0030" classname="Should return BadRequest when try to work with non-stream type">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Common Should return BadRequest when id specified is less then the latest one" time="0.0030" classname="Should return BadRequest when id specified is less then the latest one">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries Common Should return NotFound error if instance id does not exists" time="0.0050" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:51" tests="3" file="/usr/src/app/test/api/stream/POST-instance-id-streams-entries.test.ts" time="0.0160" failures="0">
    <testcase name="POST /instance/:instanceId/streams/entries ACL Should add entries" time="0.0040" classname="Should add entries">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams/entries ACL Should throw error if no permissions for &quot;xadd&quot; command" time="0.0070" classname="Should throw error if no permissions for &quot;xadd&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/streams" timestamp="2022-06-30T06:43:51" tests="0" file="/usr/src/app/test/api/stream/POST-instance-id-streams.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:51" tests="38" file="/usr/src/app/test/api/stream/POST-instance-id-streams.test.ts" time="0.1300" failures="0">
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: keyName = &quot;null&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: keyName = &quot;100&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: keyName = &quot;true&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: entries = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries = &quot;null&quot;" time="0.0020" classname="Validation error when data: entries = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries = &quot;somestring&quot;" time="0.0020" classname="Validation error when data: entries = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries = &quot;100&quot;" time="0.0030" classname="Validation error when data: entries = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: entries = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries = &quot;true&quot;" time="0.0030" classname="Validation error when data: entries = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0 = &quot;null&quot;" time="0.0020" classname="Validation error when data: entries.0 = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0 = &quot;somestring&quot;" time="0.0020" classname="Validation error when data: entries.0 = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0 = &quot;100&quot;" time="0.0020" classname="Validation error when data: entries.0 = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0 = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: entries.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0 = &quot;true&quot;" time="0.0030" classname="Validation error when data: entries.0 = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.id = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.id = &quot;null&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.id = &quot;100&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.id = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.id = &quot;true&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.id = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.id = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: entries.0.id = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.fields = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: entries.0.fields = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.fields = &quot;null&quot;" time="0.0030" classname="Validation error when data: entries.0.fields = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.fields = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: entries.0.fields = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.fields = &quot;100&quot;" time="0.0040" classname="Validation error when data: entries.0.fields = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.fields = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: entries.0.fields = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: entries.0.fields = &quot;true&quot;" time="0.0050" classname="Validation error when data: entries.0.fields = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: expire = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: expire = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: expire = &quot;true&quot;" time="0.0030" classname="Validation error when data: expire = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: expire = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: expire = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: expire = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: expire = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: expire = &quot;11.11&quot;" time="0.0040" classname="Validation error when data: expire = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: expire = &quot;0&quot;" time="0.0030" classname="Validation error when data: expire = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Validation Validation error when data: expire = &quot;2147483648&quot;" time="0.0040" classname="Validation error when data: expire = &quot;2147483648&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:51" tests="5" file="/usr/src/app/test/api/stream/POST-instance-id-streams.test.ts" time="0.0180" failures="0">
    <testcase name="POST /instance/:instanceId/streams Common Should create stream with single entry and single field" time="0.0040" classname="Should create stream with single entry and single field">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Common Should create stream with ttl" time="0.0040" classname="Should create stream with ttl">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Common Should create stream with multiple entries and multiple fields" time="0.0030" classname="Should create stream with multiple entries and multiple fields">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Common Should return Conflict error when trying to create key with existing key name" time="0.0030" classname="Should return Conflict error when trying to create key with existing key name">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:43:51" tests="3" file="/usr/src/app/test/api/stream/POST-instance-id-streams.test.ts" time="0.0140" failures="0">
    <testcase name="POST /instance/:instanceId/streams ACL Should create stream" time="0.0020" classname="Should create stream">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/streams ACL Should throw error if no permissions for &quot;xadd&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;xadd&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/string" timestamp="2022-06-30T06:43:51" tests="0" file="/usr/src/app/test/api/string/POST-instance-id-string.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:43:51" tests="21" file="/usr/src/app/test/api/string/POST-instance-id-string.test.ts" time="0.0680" failures="0">
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: value = &quot;undefined&quot;" time="0.0020" classname="Validation error when data: value = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: value = &quot;null&quot;" time="0.0020" classname="Validation error when data: value = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: value = &quot;100&quot;" time="0.0020" classname="Validation error when data: value = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: value = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: value = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: value = &quot;true&quot;" time="0.0020" classname="Validation error when data: value = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: value = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: value = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: value = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: value = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: expire = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: expire = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: expire = &quot;true&quot;" time="0.0030" classname="Validation error when data: expire = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: expire = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: expire = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: expire = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: expire = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: expire = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: expire = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: expire = &quot;0&quot;" time="0.0030" classname="Validation error when data: expire = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Validation Validation error when data: expire = &quot;2147483648&quot;" time="0.0030" classname="Validation error when data: expire = &quot;2147483648&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:43:51" tests="5" file="/usr/src/app/test/api/string/POST-instance-id-string.test.ts" time="0.0180" failures="0">
    <testcase name="POST /instance/:instanceId/string Common Should create item with empty value" time="0.0030" classname="Should create item with empty value">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Common Should create item with key ttl" time="0.0020" classname="Should create item with key ttl">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Common Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Common Should return conflict error if key already exists" time="0.0040" classname="Should return conflict error if key already exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/string Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="Big values" timestamp="2022-06-30T06:43:51" tests="1" file="/usr/src/app/test/api/string/POST-instance-id-string.test.ts" time="11.6410" failures="0">
    <testcase name="POST /instance/:instanceId/string Big values Should create 110MB string" time="11.6320" classname="Should create 110MB string">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:44:03" tests="2" file="/usr/src/app/test/api/string/POST-instance-id-string.test.ts" time="0.0180" failures="0">
    <testcase name="POST /instance/:instanceId/string ACL Should create regular item" time="0.0090" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/string ACL Should throw error if no permissions for &quot;set&quot; command" time="0.0070" classname="Should throw error if no permissions for &quot;set&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PUT /instance/:instanceId/string" timestamp="2022-06-30T06:44:03" tests="0" file="/usr/src/app/test/api/string/PUT-instance-id-string.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:44:03" tests="14" file="/usr/src/app/test/api/string/PUT-instance-id-string.test.ts" time="0.0530" failures="0">
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0060" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: keyName = &quot;null&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: value = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: value = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: value = &quot;null&quot;" time="0.0030" classname="Validation error when data: value = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: value = &quot;100&quot;" time="0.0020" classname="Validation error when data: value = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: value = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: value = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: value = &quot;true&quot;" time="0.0030" classname="Validation error when data: value = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: value = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: value = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Validation Validation error when data: value = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: value = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:44:03" tests="5" file="/usr/src/app/test/api/string/PUT-instance-id-string.test.ts" time="0.0200" failures="0">
    <testcase name="PUT /instance/:instanceId/string Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Common Should return NotFound error if key does not exists" time="0.0050" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Common Should edit existing value" time="0.0030" classname="Should edit existing value">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Common Should edit existing value and do not edit ttl" time="0.0050" classname="Should edit existing value and do not edit ttl">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string Common Should edit existing value for different key type" time="0.0030" classname="Should edit existing value for different key type">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:44:03" tests="4" file="/usr/src/app/test/api/string/PUT-instance-id-string.test.ts" time="0.0190" failures="0">
    <testcase name="PUT /instance/:instanceId/string ACL Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string ACL Should throw error if no permissions for &quot;set&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;set&quot; command">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string ACL Should throw error if no permissions for &quot;ttl&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;ttl&quot; command">
    </testcase>
    <testcase name="PUT /instance/:instanceId/string ACL Should throw error if no permissions for &quot;expire&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;expire&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /instance/:instanceId/workbench/command-executions/:commandExecutionId" timestamp="2022-06-30T06:44:03" tests="0" file="/usr/src/app/test/api/workbench/DELETE-instance-id-workbench-command_executions-id.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:44:03" tests="2" file="/usr/src/app/test/api/workbench/DELETE-instance-id-workbench-command_executions-id.test.ts" time="0.0690" failures="0">
    <testcase name="DELETE /instance/:instanceId/workbench/command-executions/:commandExecutionId Common Should return 404 not found when incorrect instance" time="0.0030" classname="Should return 404 not found when incorrect instance">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/workbench/command-executions/:commandExecutionId Common Should return 0 array when no history items yet" time="0.0650" classname="Should return 0 array when no history items yet">
    </testcase>
  </testsuite>
  <testsuite name="GET /instance/:instanceId/workbench/command-executions/:commandExecutionId" timestamp="2022-06-30T06:44:03" tests="0" file="/usr/src/app/test/api/workbench/GET-instance-id-workbench-command_executions-id.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:44:03" tests="4" file="/usr/src/app/test/api/workbench/GET-instance-id-workbench-command_executions-id.test.ts" time="2.1540" failures="0">
    <testcase name="GET /instance/:instanceId/workbench/command-executions/:commandExecutionId Common Should return 404 not found when incorrect instance" time="0.0020" classname="Should return 404 not found when incorrect instance">
    </testcase>
    <testcase name="GET /instance/:instanceId/workbench/command-executions/:commandExecutionId Common Should return 404 not found when incorrect command execution id" time="0.0080" classname="Should return 404 not found when incorrect command execution id">
    </testcase>
    <testcase name="GET /instance/:instanceId/workbench/command-executions/:commandExecutionId Common Should return 0 array when no history items yet" time="2.1110" classname="Should return 0 array when no history items yet">
    </testcase>
    <testcase name="GET /instance/:instanceId/workbench/command-executions/:commandExecutionId Common Should return null in the command and result when unable to decrypt" time="0.0310" classname="Should return null in the command and result when unable to decrypt">
    </testcase>
  </testsuite>
  <testsuite name="GET /instance/:instanceId/workbench/command-executions" timestamp="2022-06-30T06:44:05" tests="0" file="/usr/src/app/test/api/workbench/GET-instance-id-workbench-command_executions.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:44:05" tests="4" file="/usr/src/app/test/api/workbench/GET-instance-id-workbench-command_executions.test.ts" time="2.5390" failures="0">
    <testcase name="GET /instance/:instanceId/workbench/command-executions Common Should return 0 array when no history items yet" time="0.0200" classname="Should return 0 array when no history items yet">
    </testcase>
    <testcase name="GET /instance/:instanceId/workbench/command-executions Common Should get only 30 items" time="2.0340" classname="Should get only 30 items">
    </testcase>
    <testcase name="GET /instance/:instanceId/workbench/command-executions Common Should return only 10 items that we are able to decrypt" time="0.4800" classname="Should return only 10 items that we are able to decrypt">
    </testcase>
    <testcase name="GET /instance/:instanceId/workbench/command-executions Common Should return 404 not found when incorrect instance" time="0.0020" classname="Should return 404 not found when incorrect instance">
    </testcase>
  </testsuite>
  <testsuite name="monitor" timestamp="2022-06-30T06:44:08" tests="0" file="/usr/src/app/test/api/ws/monitor/monitor.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Connection edge cases" timestamp="2022-06-30T06:44:08" tests="1" file="/usr/src/app/test/api/ws/monitor/monitor.test.ts" time="0.1040" failures="0">
    <testcase name="monitor Connection edge cases should not crash on 100 concurrent monitor connections to the same db" time="0.1020" classname="should not crash on 100 concurrent monitor connections to the same db">
    </testcase>
  </testsuite>
  <testsuite name="Client creation" timestamp="2022-06-30T06:44:08" tests="2" file="/usr/src/app/test/api/ws/monitor/monitor.test.ts" time="0.0160" failures="0">
    <testcase name="monitor Client creation Should successfully create a client" time="0.0050" classname="Should successfully create a client">
    </testcase>
    <testcase name="monitor Client creation Should successfully create a client even when incorrect instanceId provided" time="0.0060" classname="Should successfully create a client even when incorrect instanceId provided">
    </testcase>
  </testsuite>
  <testsuite name="Emit monitor" timestamp="2022-06-30T06:44:08" tests="2" file="/usr/src/app/test/api/ws/monitor/monitor.test.ts" time="0.0210" failures="0">
    <testcase name="monitor Emit monitor Should successfully emit monitor event" time="0.0080" classname="Should successfully emit monitor event">
    </testcase>
    <testcase name="monitor Emit monitor Should return Not Found acknowledge on monitor event with incorrect instanceId" time="0.0120" classname="Should return Not Found acknowledge on monitor event with incorrect instanceId">
    </testcase>
  </testsuite>
  <testsuite name="On monitorData" timestamp="2022-06-30T06:44:08" tests="2" file="/usr/src/app/test/api/ws/monitor/monitor.test.ts" time="2.0980" failures="0">
    <testcase name="monitor On monitorData Should receive particular log" time="0.0590" classname="Should receive particular log">
    </testcase>
    <testcase name="monitor On monitorData Should receive bunch of logs for many clients" time="2.0380" classname="Should receive bunch of logs for many clients">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:44:10" tests="2" file="/usr/src/app/test/api/ws/monitor/monitor.test.ts" time="0.0340" failures="0">
    <testcase name="monitor ACL should connect if monitor permitted" time="0.0130" classname="should connect if monitor permitted">
    </testcase>
    <testcase name="monitor ACL should throw an error on connect without permissions" time="0.0160" classname="should throw an error on connect without permissions">
    </testcase>
  </testsuite>
  <testsuite name="pub-sub" timestamp="2022-06-30T06:44:10" tests="0" file="/usr/src/app/test/api/ws/pub-sub/pub-sub.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Connection edge cases" timestamp="2022-06-30T06:44:10" tests="1" file="/usr/src/app/test/api/ws/pub-sub/pub-sub.test.ts" time="0.3150" failures="0">
    <testcase name="pub-sub Connection edge cases should not crash on 100 concurrent pub-sub connections to the same db" time="0.2720" classname="should not crash on 100 concurrent pub-sub connections to the same db">
    </testcase>
  </testsuite>
  <testsuite name="Client creation" timestamp="2022-06-30T06:44:10" tests="2" file="/usr/src/app/test/api/ws/pub-sub/pub-sub.test.ts" time="0.0190" failures="0">
    <testcase name="pub-sub Client creation Should successfully create a client" time="0.0000" classname="Should successfully create a client">
    </testcase>
    <testcase name="pub-sub Client creation Should successfully create a client even when incorrect instanceId provided" time="0.0050" classname="Should successfully create a client even when incorrect instanceId provided">
    </testcase>
  </testsuite>
  <testsuite name="subscribe" timestamp="2022-06-30T06:44:10" tests="2" file="/usr/src/app/test/api/ws/pub-sub/pub-sub.test.ts" time="0.0650" failures="0">
    <testcase name="pub-sub subscribe Should successfully subscribe" time="0.0350" classname="Should successfully subscribe">
    </testcase>
    <testcase name="pub-sub subscribe Should return Not Found acknowledge when incorrect instanceId" time="0.0110" classname="Should return Not Found acknowledge when incorrect instanceId">
    </testcase>
  </testsuite>
  <testsuite name="on message" timestamp="2022-06-30T06:44:10" tests="2" file="/usr/src/app/test/api/ws/pub-sub/pub-sub.test.ts" time="3.1460" failures="0">
    <testcase name="pub-sub on message Should receive message on particular channel only" time="0.0620" classname="Should receive message on particular channel only">
    </testcase>
    <testcase name="pub-sub on message Should receive bunch of logs for many subscriptions" time="3.0630" classname="Should receive bunch of logs for many subscriptions">
    </testcase>
  </testsuite>
  <testsuite name="unsubscribe" timestamp="2022-06-30T06:44:14" tests="2" file="/usr/src/app/test/api/ws/pub-sub/pub-sub.test.ts" time="0.2020" failures="0">
    <testcase name="pub-sub unsubscribe Should still receive messages on subscriptions left" time="0.1080" classname="Should still receive messages on subscriptions left">
    </testcase>
    <testcase name="pub-sub unsubscribe Should receive bunch of messages when subscribed only" time="0.0720" classname="Should receive bunch of messages when subscribed only">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:44:14" tests="4" file="/usr/src/app/test/api/ws/pub-sub/pub-sub.test.ts" time="0.1680" failures="0">
    <testcase name="pub-sub ACL should throw an error on connect without permissions (subscribe)" time="0.0340" classname="should throw an error on connect without permissions (subscribe)">
    </testcase>
    <testcase name="pub-sub ACL should throw an error on connect without permissions (psubscribe)" time="0.0340" classname="should throw an error on connect without permissions (psubscribe)">
    </testcase>
    <testcase name="pub-sub ACL should throw an error on connect without permissions (unsubscribe)" time="0.0360" classname="should throw an error on connect without permissions (unsubscribe)">
    </testcase>
    <testcase name="pub-sub ACL should throw an error on connect without permissions (punsubscribe)" time="0.0360" classname="should throw an error on connect without permissions (punsubscribe)">
    </testcase>
  </testsuite>
  <testsuite name="DELETE /instance/:instanceId/zSet/members" timestamp="2022-06-30T06:44:14" tests="0" file="/usr/src/app/test/api/z-set/DELETE-instance-id-zSet-members.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:44:14" tests="13" file="/usr/src/app/test/api/z-set/DELETE-instance-id-zSet-members.test.ts" time="0.0760" failures="0">
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: keyName = &quot;100&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: members = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: members = &quot;undefined&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: members = &quot;null&quot;" time="0.0030" classname="Validation error when data: members = &quot;null&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: members = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: members = &quot;somestring&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: members = &quot;100&quot;" time="0.0030" classname="Validation error when data: members = &quot;100&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: members = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: members = &quot;100.12&quot;">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Validation Validation error when data: members = &quot;true&quot;" time="0.0030" classname="Validation error when data: members = &quot;true&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:44:14" tests="5" file="/usr/src/app/test/api/z-set/DELETE-instance-id-zSet-members.test.ts" time="0.0190" failures="0">
    <testcase name="DELETE /instance/:instanceId/zSet/members Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Common Should return BadRequest error if try to modify incorrect data type" time="0.0040" classname="Should return BadRequest error if try to modify incorrect data type">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Common Should remove single member" time="0.0040" classname="Should remove single member">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members Common Should remove multiple member" time="0.0030" classname="Should remove multiple member">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:44:14" tests="3" file="/usr/src/app/test/api/z-set/DELETE-instance-id-zSet-members.test.ts" time="0.0140" failures="0">
    <testcase name="DELETE /instance/:instanceId/zSet/members ACL Should remove all members and key" time="0.0030" classname="Should remove all members and key">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members ACL Should throw error if no permissions for &quot;zrem&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;zrem&quot; command">
    </testcase>
    <testcase name="DELETE /instance/:instanceId/zSet/members ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PATCH /instance/:instanceId/zSet" timestamp="2022-06-30T06:44:14" tests="0" file="/usr/src/app/test/api/z-set/PATCH-instance-id-zSet.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:44:14" tests="24" file="/usr/src/app/test/api/z-set/PATCH-instance-id-zSet.test.ts" time="0.1050" failures="0">
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;100&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0090" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member = &quot;null&quot;" time="0.0050" classname="Validation error when data: member = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member = &quot;somestring&quot;" time="0.0060" classname="Validation error when data: member = &quot;somestring&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member = &quot;100&quot;" time="0.0040" classname="Validation error when data: member = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member = &quot;100.12&quot;" time="0.0050" classname="Validation error when data: member = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member = &quot;true&quot;" time="0.0040" classname="Validation error when data: member = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.name = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: member.name = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.name = &quot;null&quot;" time="0.0030" classname="Validation error when data: member.name = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.name = &quot;100&quot;" time="0.0050" classname="Validation error when data: member.name = &quot;100&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.name = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: member.name = &quot;100.12&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.name = &quot;true&quot;" time="0.0040" classname="Validation error when data: member.name = &quot;true&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.name = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: member.name = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.name = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: member.name = &quot;some,array&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.score = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: member.score = &quot;undefined&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.score = &quot;null&quot;" time="0.0050" classname="Validation error when data: member.score = &quot;null&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.score = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: member.score = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.score = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: member.score = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Validation Validation error when data: member.score = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: member.score = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:44:14" tests="4" file="/usr/src/app/test/api/z-set/PATCH-instance-id-zSet.test.ts" time="0.0160" failures="0">
    <testcase name="PATCH /instance/:instanceId/zSet Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Common Should return NotFound error if try to modify incorrect data type" time="0.0030" classname="Should return NotFound error if try to modify incorrect data type">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet Common Should modify member with empty value" time="0.0030" classname="Should modify member with empty value">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:44:14" tests="3" file="/usr/src/app/test/api/z-set/PATCH-instance-id-zSet.test.ts" time="0.0140" failures="0">
    <testcase name="PATCH /instance/:instanceId/zSet ACL Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet ACL Should throw error if no permissions for &quot;zadd&quot; command" time="0.0050" classname="Should throw error if no permissions for &quot;zadd&quot; command">
    </testcase>
    <testcase name="PATCH /instance/:instanceId/zSet ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/zSet/get-members" timestamp="2022-06-30T06:44:14" tests="0" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet-get_members.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:44:14" tests="27" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet-get_members.test.ts" time="0.1080" failures="0">
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: keyName = &quot;100&quot;" time="0.0070" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: offset = &quot;undefined&quot;" time="0.0020" classname="Validation error when data: offset = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: offset = &quot;null&quot;" time="0.0020" classname="Validation error when data: offset = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: offset = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: offset = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: offset = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: offset = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: offset = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: offset = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: offset = &quot;11.11&quot;" time="0.0020" classname="Validation error when data: offset = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: offset = &quot;-1&quot;" time="0.0030" classname="Validation error when data: offset = &quot;-1&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: count = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: count = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: count = &quot;null&quot;" time="0.0030" classname="Validation error when data: count = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: count = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: count = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: count = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: count = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: count = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: count = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: count = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: count = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: count = &quot;0&quot;" time="0.0030" classname="Validation error when data: count = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: sortOrder = &quot;null&quot;" time="0.0030" classname="Validation error when data: sortOrder = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: sortOrder = &quot;100&quot;" time="0.0030" classname="Validation error when data: sortOrder = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: sortOrder = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: sortOrder = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: sortOrder = &quot;true&quot;" time="0.0030" classname="Validation error when data: sortOrder = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: sortOrder = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: sortOrder = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Validation Validation error when data: sortOrder = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: sortOrder = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:44:14" tests="5" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet-get_members.test.ts" time="0.0190" failures="0">
    <testcase name="POST /instance/:instanceId/zSet/get-members Common Should query 15 members sorted DESC" time="0.0040" classname="Should query 15 members sorted DESC">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Common Should query 45 members sorted ASC" time="0.0050" classname="Should query 45 members sorted ASC">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Common Should query next 45 members sorted ASC" time="0.0040" classname="Should query next 45 members sorted ASC">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:44:14" tests="4" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet-get_members.test.ts" time="0.0210" failures="0">
    <testcase name="POST /instance/:instanceId/zSet/get-members ACL Should remove all members and key" time="0.0080" classname="Should remove all members and key">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members ACL Should throw error if no permissions for &quot;zcard&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;zcard&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members ACL Should throw error if no permissions for &quot;zrange&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;zrange&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/get-members ACL Should throw error if no permissions for &quot;zrevrange&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;zrevrange&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/zSet/search" timestamp="2022-06-30T06:44:14" tests="0" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet-search.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:44:15" tests="26" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet-search.test.ts" time="0.1280" failures="0">
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: keyName = &quot;null&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: keyName = &quot;100&quot;" time="0.0090" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: keyName = &quot;true&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: cursor = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: cursor = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: cursor = &quot;null&quot;" time="0.0040" classname="Validation error when data: cursor = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: cursor = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: cursor = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: cursor = &quot;[object Object]&quot;" time="0.0020" classname="Validation error when data: cursor = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: cursor = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: cursor = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: cursor = &quot;11.11&quot;" time="0.0020" classname="Validation error when data: cursor = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: cursor = &quot;-1&quot;" time="0.0030" classname="Validation error when data: cursor = &quot;-1&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: count = &quot;stringvalue&quot;" time="0.0030" classname="Validation error when data: count = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: count = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: count = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: count = &quot;some,array&quot;" time="0.0060" classname="Validation error when data: count = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: count = &quot;11.11&quot;" time="0.0070" classname="Validation error when data: count = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: count = &quot;0&quot;" time="0.0040" classname="Validation error when data: count = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: match = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: match = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: match = &quot;null&quot;" time="0.0050" classname="Validation error when data: match = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: match = &quot;100&quot;" time="0.0070" classname="Validation error when data: match = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: match = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: match = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: match = &quot;true&quot;" time="0.0050" classname="Validation error when data: match = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: match = &quot;[object Object]&quot;" time="0.0060" classname="Validation error when data: match = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Validation Validation error when data: match = &quot;some,array&quot;" time="0.0050" classname="Validation error when data: match = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:44:15" tests="8" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet-search.test.ts" time="0.0000" failures="0">
    <testcase name="POST /instance/:instanceId/zSet/search Common Should find by exact match" time="0.0070" classname="Should find by exact match">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Common Should not find any member" time="0.0530" classname="Should not find any member">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Common Should query 15 members" time="0.0040" classname="Should query 15 members">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Common Should query members with * in the end" time="0.0570" classname="Should query members with * in the end">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Common Should query members with * in the beginning" time="0.0400" classname="Should query members with * in the beginning">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Common Should query members with * in the middle" time="0.0370" classname="Should query members with * in the middle">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Common Should return NotFound error if key does not exists" time="0.0030" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search Common Should return NotFound error if instance id does not exists" time="0.0080" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="Search in huge number of elements" timestamp="2022-06-30T06:44:15" tests="2" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet-search.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:44:15" tests="4" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet-search.test.ts" time="0.0180" failures="0">
    <testcase name="POST /instance/:instanceId/zSet/search ACL Should remove all members and key" time="0.0030" classname="Should remove all members and key">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search ACL Should throw error if no permissions for &quot;zcard&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;zcard&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search ACL Should throw error if no permissions for &quot;zscan&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;zscan&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet/search ACL Should throw error if no permissions for &quot;zscore&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;zscore&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="POST /instance/:instanceId/zSet" timestamp="2022-06-30T06:44:15" tests="0" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:44:15" tests="36" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet.test.ts" time="0.1370" failures="0">
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;null&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;100&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;true&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members = &quot;null&quot;" time="0.0030" classname="Validation error when data: members = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members = &quot;somestring&quot;" time="0.0050" classname="Validation error when data: members = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members = &quot;100&quot;" time="0.0030" classname="Validation error when data: members = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: members = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members = &quot;true&quot;" time="0.0030" classname="Validation error when data: members = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0 = &quot;null&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0 = &quot;somestring&quot;" time="0.0020" classname="Validation error when data: members.0 = &quot;somestring&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0 = &quot;100&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0 = &quot;100.12&quot;" time="0.0040" classname="Validation error when data: members.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0 = &quot;true&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;null&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;100&quot;" time="0.0040" classname="Validation error when data: members.0.name = &quot;100&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;100.12&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;true&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.score = &quot;undefined&quot;" time="0.0040" classname="Validation error when data: members.0.score = &quot;undefined&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.score = &quot;null&quot;" time="0.0030" classname="Validation error when data: members.0.score = &quot;null&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.score = &quot;stringvalue&quot;" time="0.0020" classname="Validation error when data: members.0.score = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.score = &quot;[object Object]&quot;" time="0.0050" classname="Validation error when data: members.0.score = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: members.0.score = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: members.0.score = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: expire = &quot;stringvalue&quot;" time="0.0050" classname="Validation error when data: expire = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: expire = &quot;true&quot;" time="0.0040" classname="Validation error when data: expire = &quot;true&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: expire = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: expire = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: expire = &quot;some,array&quot;" time="0.0040" classname="Validation error when data: expire = &quot;some,array&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: expire = &quot;11.11&quot;" time="0.0030" classname="Validation error when data: expire = &quot;11.11&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: expire = &quot;0&quot;" time="0.0030" classname="Validation error when data: expire = &quot;0&quot;">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Validation Validation error when data: expire = &quot;2147483648&quot;" time="0.0030" classname="Validation error when data: expire = &quot;2147483648&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:44:15" tests="5" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet.test.ts" time="0.0230" failures="0">
    <testcase name="POST /instance/:instanceId/zSet Common Should create item with empty value" time="0.0050" classname="Should create item with empty value">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Common Should create item with key ttl" time="0.0060" classname="Should create item with key ttl">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Common Should create regular item" time="0.0040" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Common Should return conflict error if key already exists" time="0.0040" classname="Should return conflict error if key already exists">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet Common Should return NotFound error if instance id does not exists" time="0.0030" classname="Should return NotFound error if instance id does not exists">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:44:15" tests="3" file="/usr/src/app/test/api/z-set/POST-instance-id-zSet.test.ts" time="0.0120" failures="0">
    <testcase name="POST /instance/:instanceId/zSet ACL Should create regular item" time="0.0040" classname="Should create regular item">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet ACL Should throw error if no permissions for &quot;zadd&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;zadd&quot; command">
    </testcase>
    <testcase name="POST /instance/:instanceId/zSet ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
  </testsuite>
  <testsuite name="PUT /instance/:instanceId/zSet" timestamp="2022-06-30T06:44:15" tests="0" file="/usr/src/app/test/api/z-set/PUT-instance-id-zSet.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Validation" timestamp="2022-06-30T06:44:15" tests="29" file="/usr/src/app/test/api/z-set/PUT-instance-id-zSet.test.ts" time="0.1160" failures="0">
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;undefined&quot;" time="0.0050" classname="Validation error when data: keyName = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;null&quot;" time="0.0020" classname="Validation error when data: keyName = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;100&quot;" time="0.0170" classname="Validation error when data: keyName = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;true&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: keyName = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: keyName = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members = &quot;null&quot;" time="0.0030" classname="Validation error when data: members = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: members = &quot;somestring&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members = &quot;100&quot;" time="0.0030" classname="Validation error when data: members = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members = &quot;100.12&quot;" time="0.0020" classname="Validation error when data: members = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members = &quot;true&quot;" time="0.0040" classname="Validation error when data: members = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0 = &quot;null&quot;" time="0.0050" classname="Validation error when data: members.0 = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0 = &quot;somestring&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;somestring&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0 = &quot;100&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0 = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0 = &quot;true&quot;" time="0.0030" classname="Validation error when data: members.0 = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;null&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;100&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;100&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;100.12&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;100.12&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;true&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;true&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;[object Object]&quot;" time="0.0030" classname="Validation error when data: members.0.name = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.name = &quot;some,array&quot;" time="0.0020" classname="Validation error when data: members.0.name = &quot;some,array&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.score = &quot;undefined&quot;" time="0.0030" classname="Validation error when data: members.0.score = &quot;undefined&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.score = &quot;null&quot;" time="0.0030" classname="Validation error when data: members.0.score = &quot;null&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.score = &quot;stringvalue&quot;" time="0.0040" classname="Validation error when data: members.0.score = &quot;stringvalue&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.score = &quot;[object Object]&quot;" time="0.0040" classname="Validation error when data: members.0.score = &quot;[object Object]&quot;">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Validation Validation error when data: members.0.score = &quot;some,array&quot;" time="0.0030" classname="Validation error when data: members.0.score = &quot;some,array&quot;">
    </testcase>
  </testsuite>
  <testsuite name="Common" timestamp="2022-06-30T06:44:15" tests="5" file="/usr/src/app/test/api/z-set/PUT-instance-id-zSet.test.ts" time="0.0200" failures="0">
    <testcase name="PUT /instance/:instanceId/zSet Common Should return NotFound error if instance id does not exists" time="0.0020" classname="Should return NotFound error if instance id does not exists">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Common Should return NotFound error if key does not exists" time="0.0040" classname="Should return NotFound error if key does not exists">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Common Should return BadRequest error if try to modify incorrect data type" time="0.0040" classname="Should return BadRequest error if try to modify incorrect data type">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Common Should add member with empty value" time="0.0050" classname="Should add member with empty value">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet Common Should add few members" time="0.0040" classname="Should add few members">
    </testcase>
  </testsuite>
  <testsuite name="ACL" timestamp="2022-06-30T06:44:15" tests="3" file="/usr/src/app/test/api/z-set/PUT-instance-id-zSet.test.ts" time="0.0120" failures="0">
    <testcase name="PUT /instance/:instanceId/zSet ACL Should create regular item" time="0.0030" classname="Should create regular item">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet ACL Should throw error if no permissions for &quot;zadd&quot; command" time="0.0040" classname="Should throw error if no permissions for &quot;zadd&quot; command">
    </testcase>
    <testcase name="PUT /instance/:instanceId/zSet ACL Should throw error if no permissions for &quot;exists&quot; command" time="0.0030" classname="Should throw error if no permissions for &quot;exists&quot; command">
    </testcase>
  </testsuite>
</testsuites>